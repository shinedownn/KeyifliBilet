@model KeyifliBilet.Models.SearchVM
@{
    /**/

    ViewBag.Title = "Result";
    Layout = "~/Views/Shared/MasterPage.cshtml";
    int i = 0;
}
<div id="preloader">
    <div class="inner">
        <p>
            <span class="route text-black size-30">
                <span id="spnDeparture">İstanbul (IST)</span>
                <i class="fa fa-arrow-circle-o-right"></i>
                <span id="spnArrival">Erzincan (ERC)</span>
            </span>
            <br>
            <span class="size-14" id="spnDateAndPax">
                16 Haziran 2018 - 1 Yetişkin
            </span>
        </p>
        <h5 class="size-18">Sizin için en keyifli uçuşları arıyoruz.<br>Lütfen Bekleyiniz.</h5>
        <div class="wrapper">
            <div id="plane">
                <i class="fa fa-plane"></i>
            </div>
            <div class="loader">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
    </div>
</div>

<input id="hdnHidePreviousDay" name="hdnHidePreviousDay" type="hidden" value="True" style="top:-20px;" />
@Html.Action("HeaderResult", "Home")
<section id="adas-result" class="hidden-xs">
    <div id="adas-result-background"></div>
    <div id="adas-result-tagline" style="height:100%">
        <div class="container" style="height:100%">
            <div class="search-engine" style="height:100%">
                <div class="search-engine-steps" style="height:100%">
                    <div class="engine-step tab-pane show active" id="tabQuickFlights" role="tabpanel" aria-labelledby="flight-tab">
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { id = "SearchForm", style = "height:100%" }))
                        {

                            @*<input id="hdnIsOneWay" name="IsOneWay" type="hidden" value="@Model.Search.IsOneWay">*@
                            @Html.Hidden("IsOneWay", Model.Search.IsOneWay, new { id = "hdnIsOneWay" })
                            <div class="row">
                                <div class="col-md-6 tabs-type-a tabs-block">
                                    <ul class="nav nav-tabs tabs-nav" id="myTab" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="tekyon-tab" data-toggle="tab" href="#tekyon" role="tab" aria-controls="tekyon" aria-selected="true">Tek Yön</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="gidisdonus-tab" data-toggle="tab" href="#gidisdonus" role="tab" aria-controls="gidisdonus" aria-selected="false">Gidiş-Dönüş</a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" aria-controls="tekyon" aria-selected="true">
                                                <label class="nomargin">
                                                    <input type="checkbox" id="chkNoStop" style="vertical-align: -3px;" @(Model.Search.NoStop ? "checked=\" checked\"" : "" )> Sadece direkt uçuşları
                                                    @*@Html.CheckBoxFor(model => model.NoStop, new { style = "vertical-align: -3px;" }) Sadece direkt uçuşları*@
                                                </label>
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="btn-group" id="dvDeparture">
                                        <button class="btn btn-secondary btn-lg dropdown-toggle custom-input animated flipInX" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="icon-plane"></i>
                                            <span class="label autohide">
                                                <span class="label-short">@Model.Search.DEP_Airport_CityName</span>
                                                <span class="label-full">
                                                    <span class="label-airport">@Model.Search.DEP_Airport_Name</span>
                                                    (<span class="label-code">@Model.Search.DEP_Airport_Code</span>)
                                                </span>
                                            </span>
                                        </button>
                                        <div class="dropdown-menu" role="menu">
                                            <div class="typeahead__container">
                                                <div class="typeahead__field">
                                                    <span class="typeahead__query">
                                                        <input type="text" placeholder="Kalkış Havalimanı" value="@Model.Search.DEP_Airport_Code" class="t-input txtAutocomplete ui-autocomplete-input" autocapitalize="none" id="selectBoardingTerminal" autocomplete="off">
                                                        @*@Html.TextBoxFor(model => model.DEP_Airport_Code, new { @class="t-input txtAutocomplete ui-autocomplete-input", autocapitalize="none",  id="selectBoardingTerminal", autocomplete="off" })*@
                                                    </span>
                                                </div>
                                            </div>
                                            <ul class="ui-autocomplete ui-front ui-menu ui-widget ui-widget-content" id="ui-id-1" tabindex="0" style="display: none;"></ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="change-ports animated flipInX col-md-pull-3 clearfix" id="btnChangePorts" style="cursor:pointer">
                                    <i class="icon-angle-right"></i>
                                    <i class="icon-angle-right"></i>
                                </div>
                                <div class="col-md-3">
                                    <div class="btn-group" id="dvReturn">
                                        <button class="btn btn-secondary btn-lg dropdown-toggle custom-input animated flipInX" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="icon-plane"></i>
                                            <span class="label autohide">
                                                <span class="label-short">@Model.Search.ARR_Airport_CityName</span>
                                                <span class="label-full">
                                                    <span class="label-airport">@Model.Search.ARR_Airport_Name</span>
                                                    (<span class="label-code">@Model.Search.ARR_Airport_Code</span>)
                                                </span>
                                            </span>
                                        </button>
                                        <div class="dropdown-menu" role="menu">
                                            <div class="typeahead__container">
                                                <div class="typeahead__field">
                                                    <span class="typeahead__query">
                                                        <input type="text" placeholder="Varış Havalimanı" value="@Model.Search.ARR_Airport_Code" class="t-input ui-autocomplete-input" id="selectLandingTerminal" autocomplete="off">
                                                        @*@Html.TextBoxFor(model => model.ARR_Airport_Code, new { @class="t-input ui-autocomplete-input", id="selectLandingTerminal", autocomplete="off" })*@
                                                    </span>
                                                </div>
                                            </div>
                                            <ul class="ui-autocomplete ui-front ui-menu ui-widget ui-widget-content" id="ui-id-2" tabindex="0" style="display: none;"></ul>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <button class="btn btn-secondary btn-lg custom-input dark animated flipInX" type="button">
                                                <i class="icon-calendar"></i>
                                                <span class="label">
                                                    <span class="date-title">Gidiş Tarihi</span>
                                                    @{
                                                        if (Model.Search.IsOneWay)
                                                        {
                                                            <input id="inpRangePicker" name="datepicker" type="text" class="date-inpt rangepicker" singledatepicker="true" value="@Model.Search.DepartureDate" data-format="dd.mm.yyyy" data-from="@Model.Search.DepartureDate" data-to="" readonly="readonly">
                                                        }
                                                        else
                                                        {
                                                            <input id="inpRangePicker" name="datepicker" type="text" class="date-inpt rangepicker" singledatepicker="false" value="@Model.Search.DepartureDate - @Model.Search.ReturnDate" data-format="dd.mm.yyyy" data-from="@Model.Search.DepartureDate" data-to="@Model.Search.ReturnDate" readonly="readonly">
                                                        }
                                                    }
                                                </span>
                                                <span class="field-validation-valid" data-valmsg-for="DepartureDate" data-valmsg-replace="true"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="btn-group" id="dvPerson">
                                        <button class="btn btn-secondary btn-lg dropdown-toggle custom-input animated flipInX" type="button" data-original-title="" title="">
                                            <i class="icon-user2"></i>
                                            <span class="label">
                                                <span class="date-title">Seyahat Bilgileri</span>
                                                <span id="spn_FSB_TotalPax" class="label-short"><span id="personCount">@(Model.Search.Adult + Model.Search.Child + Model.Search.Infant)</span> Yolcu</span>
                                            </span>
                                        </button>
                                        <div class="flight-information" role="menu" x-placement="bottom-start">

                                            <div class="row">
                                                <div class="col-md-4 col-6">
                                                    <label>Kabin tipi </label>
                                                </div>
                                                <div class="col-md-8 col-6">
                                                    <div class="fancy-form fancy-form-select">
                                                        <select class="form-control" name="selectCabinClass" id="ddlClass">
                                                            <option value="ALL">Hepsi</option>
                                                            <option value="PROMO">Promosyon</option>
                                                            <option value="ECONOMY">Ekonomi</option>
                                                            <option value="BUSINESS">Business</option>
                                                        </select>
                                                        <i class="fancy-arrow"></i>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="divider"></div>
                                            <div class="row">
                                                <div class="col-md-8 col-6">
                                                    <label>Yetişkin<br><span>(12 yaş ve üstü)</span></label>
                                                </div>
                                                <div class="col-md-4 col-6">

                                                    <input type="text" id="txtAdultCount" value="@Model.Search.Adult" min="1" max="5" class="form-control stepper" style="margin: 0px;">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-8 col-6">
                                                    <label>Çocuk<br><span>(2-11)</span></label>
                                                </div>
                                                <div class="col-md-4 col-6">

                                                    <input type="text" id="txtChildCount" value="@Model.Search.Child" min="0" max="2" class="form-control stepper">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-8 col-6">
                                                    <label>Bebek<br><span>(-2)</span></label>
                                                </div>
                                                <div class="col-md-4 col-6">

                                                    <input type="text" id="txtInfantCount" value="@Model.Search.Infant" min="0" max="2" class="form-control stepper">
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <a class="btn srch-tab-ok" id="btn_FSB_OK">Arama Yap</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-1 text-right">
                                    <button type="button" class="srch-btn animated flipInX" id="btnGoFlightSearch"><i class="icon-angle-right"></i></button>
                                </div>
                            </div>

                            <input type="hidden" id="DEP_Airport_IsCity" name="DEP_Airport_IsCity">
                            <input type="hidden" id="ARR_Airport_IsCity" name="ARR_Airport_IsCity">
                            <input type="hidden" id="hdnflightType" value="value">
                            <input type="hidden" id="DepartureDate" name="DepartureDate" />
                            <input type="hidden" id="ReturnDate" name="ReturnDate" />
                            <input type="hidden" id="Adult" name="Adult" />
                            <input type="hidden" id="Child" name="Child" />
                            <input type="hidden" id="Infant" name="Infant" />
                            <input type="hidden" id="CabinClass" name="CabinClass" />

                            <input type="hidden" id="DEP_Airport_Code" name="DEP_Airport_Code" value="IST">
                            <input type="hidden" id="DEP_Airport_Name" name="DEP_Airport_Name" />
                            <input type="hidden" id="DEP_Airport_CityName" name="DEP_Airport_CityName" />
                            <input type="hidden" id="ARR_Airport_Code" name="ARR_Airport_Code" value="AYT">
                            <input type="hidden" id="ARR_Airport_Name" name="ARR_Airport_Name" />
                            <input type="hidden" id="ARR_Airport_CityName" name="ARR_Airport_CityName" />

                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<section class="mobile-backhead visible-xs">
    <a class="btn btn-link" href="/"><span class="fa fa-angle-left"></span><span class="sr-only"> Uçuş Seçimi</span> Uçuş Seçimi</a>
</section>
<div id="flights-sidebar">
    <div class="flights-select toggle-bordered-full clearfix" style="display: none;">
        <div class="toggle active">
            <div class="toggle-content" style="display: block;">
                <h5>Seçiminiz</h5>
                <div class="select-result">
                </div>
                <a id="btnGoPriceDetailPage" class="btn btn-primary" style="display:none;">İlerle <i class="fa fa-angle-right"></i> </a>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <nav class="navbar navbar-expand-lg">
                <h4 class="navbar-brand" href="#">Filtrelenmiş sonuçlar</h4>
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="collapse" data-target="#divFilterCollapse" aria-controls="divFilterCollapse" aria-expanded="false" aria-label="Toggle navigation">
                                Filtreleri düzenle
                            </a>
                        </li>
                    </ul>
                    <span class="navbar-text">
                        <label class="checkbox">
                            <input type="checkbox" class="lblCabin" id="chkNoStopFilter" />    <i></i> Sadece direkt uçuşları
                        </label>
                    </span>
                    <span class="navbar-text hidden-xs">
                        Sıralama kriteri
                    </span>
                    <ul class="nav nav-pills" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="pills-home-tab" data-toggle="pill" data-orderBy="minPrice" data-sortType="asc" href="#pills-home" role="tab" aria-controls="pills-home" aria-selected="true">Ücret</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="pills-profile-tab" data-toggle="pill" data-orderBy="totalTime" data-sortType="asc" href="#pills-profile" role="tab" aria-controls="pills-profile" aria-selected="false">Süre</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="pills-contact-tab" data-toggle="pill" data-orderBy="departureTime" data-sortType="asc" href="#pills-contact" role="tab" aria-controls="pills-contact" aria-selected="false">Kalkış</a>
                        </li>
                    </ul>
                </div>
            </nav>
            <div class="col-md-3 toggle-transparent toggle-bordered-full clearfix" style="display: none">
                <div class="toggle active">
                    <div class="toggle-content" style="display: block;">
                        <h5>Fiyat Aralığı</h5>
                        <div class="clearfix">
                            <strong id="slider-limit-value-min" class="pull-left">0</strong>
                            <strong id="slider-limit-value-max" class="pull-right">10</strong>
                        </div>
                        <div id="slider-limit"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 toggle-transparent toggle-bordered-full clearfix" style="display: none">
                <div class="toggle active">
                    <div class="toggle-content" style="display: block;">
                        <h5>Kalkış Saati Aralığı</h5>
                        <div class="clearfix">
                            <strong id="slider-limit-value-min2" class="pull-left">00:00</strong>
                            <strong id="slider-limit-value-max2" class="pull-right">24:00</strong>
                        </div>
                        <div id="slider-limit2" class="slider-limit"></div>
                    </div>
                </div>
            </div>
            <div class="col-md-3 toggle-transparent toggle-bordered-full clearfix" style="display: none">
                <div class="toggle active">
                    <div class="toggle-content" style="display: block;">
                        <h5>Varış Saati Aralığı</h5>
                        <div class="clearfix">
                            <strong id="slider-limit-value-min3" class="pull-left">00:00</strong>
                            <strong id="slider-limit-value-max3" class="pull-right">23:59</strong>
                        </div>
                        <div id="slider-limit3" class="slider-limit"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="navbar navbar-light bg-light">
        <div class="container">
            <div id="divFilterCollapse" class="collapse">
                <div id="divFilterArea" class="row">
                    <div class="col-md-6 toggle-transparent toggle-bordered-full clearfix">
                        <div class="toggle active">
                            <div class="toggle-content" style="display: block;">
                                <h5>Hava Yolları</h5>
                                @{
                                    Dictionary<string, string>
                                        airlines = new Dictionary<string, string>
                                            ();
                                    foreach (var flight in Model.Flight.result.flights)
                                    {

                                        try
                                        {
                                            var code = flight.legs.FirstOrDefault().carrierCode;
                                            var name = flight.legs.FirstOrDefault().carrierName;
                                            airlines.Add(code, name);
                                        }
                                        catch (Exception)
                                        {

                                        }

                                    }
                                    foreach (var item in airlines)
                                    {
                                        <label class="checkbox"><input type="checkbox" class="lblAirline" checked="checked" value="@item.Key" /><i></i>@item.Value</label>

                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 toggle-transparent toggle-bordered-full clearfix">
                        <div class="toggle active">
                            <div class="toggle-content" style="display: block;">
                                <h5>Uçuş Sınıfı</h5>
                                <label class="checkbox"><input type="checkbox" class="lblFareType" checked="checked" value="PROMO"><i></i> PROMO</label>
                                <label class="checkbox"><input type="checkbox" class="lblFareType" checked="checked" value="ECONOMY"><i></i> ECONOMY</label>
                                <label class="checkbox"><input type="checkbox" class="lblFareType" checked="checked" value="BUSINESS"><i></i> BUSINESS</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.Search.IsOneWay == true)
{
    <section class="result-title">
        <div class="container">
            <div class="row">
                <div class="heading-title">
                    <h2><i class="icon-plane"></i> GİDİŞ</h2>
                    <p class="font-lato size-19">
                        <strong>@Model.Search.DEP_Airport_CityName - @Model.Search.ARR_Airport_CityName</strong>, <strong class="text-black">@Model.Search.DepartureDate.Replace('-', '.')</strong>
                        <a class="nav-link weekly dropdown-toggle collapsed" href="#" data-toggle="collapse" data-target="#divGidisChartCollapse" aria-controls="divGidisChartCollapse" aria-expanded="false" aria-label="Toggle navigation">
                            <i class="fa fa-line-chart"></i> <text>Haftalık Fiyatlar</text>
                        </a>
                    </p>
                    <span class="badge btn-group dropup">
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "FromProviousDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.DepartureDate).AddDays(-1).ToShortDateString();
                            @Html.Hidden("Adult", Model.Search.Adult)
                            @Html.Hidden("ARR_Airport_CityName", Model.Search.ARR_Airport_CityName)
                            @Html.Hidden("ARR_Airport_Code", Model.Search.ARR_Airport_Code)
                            @Html.Hidden("ARR_Airport_IsCity", Model.Search.ARR_Airport_IsCity)
                            @Html.Hidden("ARR_Airport_Name", Model.Search.ARR_Airport_Name)
                            @Html.Hidden("CabinClass", Model.Search.CabinClass)
                            @Html.Hidden("Child", Model.Search.Child)
                            @Html.Hidden("DepartureDate", date)
                            @Html.Hidden("DEP_Airport_CityName", Model.Search.DEP_Airport_CityName)
                            @Html.Hidden("DEP_Airport_Code", Model.Search.DEP_Airport_Code)
                            @Html.Hidden("DEP_Airport_IsCity", Model.Search.DEP_Airport_IsCity)
                            @Html.Hidden("DEP_Airport_Name", Model.Search.DEP_Airport_Name)
                            @Html.Hidden("Infant", Model.Search.Infant)
                            @Html.Hidden("IsOneWay", Model.Search.IsOneWay)
                            @Html.Hidden("NoStop", Model.Search.NoStop)
                            @Html.Hidden("ReturnDate", date)
                            @Html.Hidden("Total", Model.Search.Total)
                            <button type="button" class="btn btn-link" id="btnFromPreviousDay"><span class="fa fa-angle-left"></span><span class="sr-only">Önceki Gün</span></button>
                        }

                        <button type="submit" class="btn btn-link"> <span id="fromChangeDateStr">@Model.Search.DepartureDate.Replace('-', '.')</span> </button>
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "FromNextDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.DepartureDate).AddDays(1).ToString("dd-MM-yyyy");
                            <input type="hidden" name="Adult" value="@Model.Search.Adult" />
                            <input type="hidden" name="ARR_Airport_CityName" value="@Model.Search.ARR_Airport_CityName" />
                            <input type="hidden" name="ARR_Airport_Code" value="@Model.Search.ARR_Airport_Code" />
                            <input type="hidden" name="ARR_Airport_IsCity" value="@Model.Search.ARR_Airport_IsCity" />
                            <input type="hidden" name="ARR_Airport_Name" value="@Model.Search.ARR_Airport_Name" />
                            <input type="hidden" name="CabinClass" value="@Model.Search.CabinClass" />
                            <input type="hidden" name="Child" value="@Model.Search.Child" />
                            <input type="hidden" name="DepartureDate" value="@date" />
                            <input type="hidden" name="DEP_Airport_CityName" value="@Model.Search.DEP_Airport_CityName" />
                            <input type="hidden" name="DEP_Airport_Code" value="@Model.Search.DEP_Airport_Code" />
                            <input type="hidden" name="DEP_Airport_IsCity" value="@Model.Search.DEP_Airport_IsCity" />
                            <input type="hidden" name="DEP_Airport_Name" value="@Model.Search.DEP_Airport_Name" />
                            <input type="hidden" name="Infant" value="@Model.Search.Infant" />
                            <input type="hidden" name="IsOneWay" value="@Model.Search.IsOneWay" />
                            <input type="hidden" name="NoStop" value="@Model.Search.NoStop" />
                            <input type="hidden" name="ReturnDate" value="@date" />
                            <input type="hidden" name="Total" value="@Model.Search.Total" />

                            <button type="button" class="btn btn-link" id="btnFromNextDay"><span class="fa fa-angle-right"></span><span class="sr-only">Sonraki Gün</span></button>
                        }
                    </span>
                </div>
                <div id="divGidisChartCollapse" class="collapse weekly-bars">
                    <div class="bars">
                        <div class="clearfix">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="flights-list" id="sectionFlightContainer">
        <div class="container">
            <div class="tab-pane show active" id="tabFlights" role="tabpanel" aria-labelledby="oneway">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <ul class="navigate">
                            <li class="nav-departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Kalkış</li>
                            <li class="col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">Aktarma</li>
                            <li class="nav-arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Varış</li>
                            <li class="col-sm-1"></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı promosyon sınıfıdır. İade ve değişiklik yapılamaz.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Promosyonlu</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı ekonomi sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Ekonomi</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı business sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Business</span></li>
                        </ul>
                        <div id="selectedFlight"></div>

                        <ul id="flight" class="models-list options-list">
                            @{

                                foreach (var flight in Model.Flight.result.flights)
                                {

                                    if (flight.returnFlight == false)
                                    {
                                        if (flight.legs.Count == 1)
                                        {
                                            <li class="flight-itinerary"
                                                pricingType="@flight.pricingType"
                                                providerKey="@flight.providerKey"
                                                packageId="@flight.packageId"
                                                departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                                totalTime="@flight.flightTimeHour"
                                                minPrice="@flight.fares[0].totalSingleAdultFare"
                                                airline="@flight.legs[0].carrierCode"
                                                data-toggle="collapse"
                                                data-target="#collapse-@i"
                                                aria-expanded="false"
                                                aria-controls="collapse-@i"
                                                data-hasstop="False">
                                                <div class="airlines">
                                                    <div class="content">
                                                        <span class="icon-carrier-@flight.legs[0].carrierCode"></span>
                                                        <br />
                                                    </div>
                                                </div>
                                                <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                    </div>
                                                </div>
                                                <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="date">@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk</div>
                                                        <div class="airport">
                                                            <div class="stop">
                                                                <div class="stop-row">DİREKT</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].arrivalCityName <br /></span> @flight.legs[0].arrivalAirport</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-1 "></div>
                                                @{
                                                    var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                    var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                    var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);
                                                    var t = flight.providerKey;
                                                    if (promo != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@promo.type</div>
                                                                <div class="price">
                                                                    @{ if (t == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                        {
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }
                                                                        else
                                                                        {
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }

                                                                    }
                                                                </div>
                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">
                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"><i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (economy != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@economy.type</div>
                                                                <div class="price">
                                                                    @{ if (t == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                        {
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }
                                                                        else
                                                                        {
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }

                                                                    }
                                                                </div>
                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">
                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"><i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (business != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@business.type</div>
                                                                <div class="price">
                                                                    @{ if (t == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                        {
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }
                                                                        else
                                                                        {
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        }

                                                                    }
                                                                </div>
                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">
                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"><i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }

                                                }

                                                <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flight">
                                                    <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                        <thead>
                                                            <tr>
                                                                <th class="col-sm-3">UÇUŞ</th>
                                                                <th class="col-sm-3">KALKIŞ</th>
                                                                <th class="col-sm-3">VARIŞ</th>
                                                                <th class="col-sm-3">SÜRE</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr class="arrival">
                                                                <td class="flights-airlines">
                                                                    <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                                    <strong>@flight.legs[0].operatorName</strong>
                                                                    <br>@flight.legs[0].flightNo
                                                                </td>
                                                                <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</strong> @flight.legs[0].departureAirport  <span>@flight.legs[0].departureCityName</span></td>
                                                                <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</strong>  @flight.legs[0].arrivalAirport        <span>@flight.legs[0].arrivalCityName</span>    </td>
                                                                <td><strong>@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk </strong><br>        uçuş süresi    </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="flight-itinerary"
                                                pricingType="@flight.pricingType"
                                                providerKey="@flight.providerKey"
                                                packageId="@flight.packageId"
                                                departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                                totalTime="@flight.flightTimeHour"
                                                minPrice="@flight.fares[0].totalSingleAdultFare"
                                                airline="@flight.legs[0].carrierCode"
                                                data-toggle="collapse"
                                                data-target="#collapse-@i"
                                                aria-expanded="false"
                                                aria-controls="collapse-@i"
                                                data-hasstop="True">
                                                <div class="airlines">
                                                    <div class="content">
                                                        <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                        <br />
                                                    </div>
                                                </div>
                                                <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                    </div>
                                                </div>
                                                <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="date">
                                                            @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) / 60) s @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) % 60) dk
                                                        </div>
                                                        <div class="airport">
                                                            <div class="stop">
                                                                <div class="stop-row-half">AKTARMA</div>
                                                                <span class="ball">  @flight.legs.Count </span>
                                                                <div class="stop-row-half">AKTARMA</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs.LastOrDefault().localArrivalDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs.LastOrDefault().arrivalCityName <br /></span> @flight.legs.LastOrDefault().arrivalAirport</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-1 "></div>
                                                @{

                                                    var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                    var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                    var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);

                                                    if (promo != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@promo.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">

                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">

                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"> <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (economy != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@economy.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"> <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (business != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@business.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')"> <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }

                                                }
                                                <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flight">
                                                    <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                        <thead>
                                                            <tr>
                                                                <th class="col-sm-3">UÇUŞ</th>
                                                                <th class="col-sm-3">KALKIŞ</th>
                                                                <th class="col-sm-3">VARIŞ</th>
                                                                <th class="col-sm-3">SÜRE</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var leg in flight.legs)
                                                            {
                                                                <tr class="arrival">
                                                                    <td class="flights-airlines">
                                                                        <span class="icon-carrier-@leg.operatorCode"></span>
                                                                        <strong>@leg.operatorName</strong>
                                                                        <br>@leg.flightNo
                                                                    </td>
                                                                    <td><strong class="time">@Convert.ToDateTime(leg.localDepartureDate).ToString("HH:mm")</strong> @leg.departureAirport  <span>@leg.departureCityName</span></td>
                                                                    <td><strong class="time">@Convert.ToDateTime(leg.localArrivalDate).ToString("HH:mm")</strong>  @leg.arrivalAirport        <span>@leg.arrivalCityName</span>    </td>
                                                                    <td><strong>@(leg.legDurationMinute / 60) s @(leg.legDurationMinute % 60) dk</strong><br>        uçuş süresi    </td>
                                                                </tr>
                                                                if (leg.waitTimeBeforeNextLeg > 0)
                                                                {
                                                                    <tr class="arrival">

                                                                        @if (leg.waitTimeBeforeNextLeg / 60 > 0)
                                                                        {
                                                                            <td colspan="4">
                                                                                Bekleme Süresi : @(leg.waitTimeBeforeNextLeg / 60) s @(leg.waitTimeBeforeNextLeg % 60) dk
                                                                            </td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td colspan="4">
                                                                                @(leg.waitTimeBeforeNextLeg % 60)dk
                                                                            </td>

                                                                        }
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </li>
                                        }
                                    }

                                    i++;
                                }

                            }
                        </ul>

                        <div class="container">
                            <div class="row">
                                <div class="col-md-12 text-right">
                                    @using (Html.BeginForm("Payment", "Flight", FormMethod.Post))
                                    {
                                        <button type="submit" class="btn btn-link btn-pay" style="display:none" onclick="@Url.Action(" Payment", "Flight" , new { k="" })">Ödeme Yap<i class="fa fa-angle-double-right"></i></button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

}
else
{
    <section class="result-title">
        <div class="container">
            <div class="row">
                <div class="heading-title">
                    <h2><i class="icon-plane"></i> GİDİŞ</h2>
                    <p class="font-lato size-19">
                        <strong>@Model.Search.DEP_Airport_CityName - @Model.Search.ARR_Airport_CityName</strong>, <strong class="text-black">@Model.Search.DepartureDate.Replace('-', '.')</strong>
                        <a class="nav-link weekly dropdown-toggle collapsed" href="#" data-toggle="collapse" data-target="#divGidisChartCollapse" aria-controls="divGidisChartCollapse" aria-expanded="false" aria-label="Toggle navigation">
                            <i class="fa fa-line-chart"></i> <text>Haftalık Fiyatlar</text>
                        </a>
                    </p>
                    <span class="badge btn-group dropup">
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "FromPreviousDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.DepartureDate).AddDays(-1).ToString("dd-MM-yyyy");
                            <input type="hidden" name="Adult" value="@Model.Search.Adult" />
                            <input type="hidden" name="ARR_Airport_CityName" value="@Model.Search.ARR_Airport_CityName" />
                            <input type="hidden" name="ARR_Airport_Code" value="@Model.Search.ARR_Airport_Code" />
                            <input type="hidden" name="ARR_Airport_IsCity" value="@Model.Search.ARR_Airport_IsCity" />
                            <input type="hidden" name="ARR_Airport_Name" value="@Model.Search.ARR_Airport_Name" />
                            <input type="hidden" name="CabinClass" value="@Model.Search.CabinClass" />
                            <input type="hidden" name="Child" value="@Model.Search.Child" />
                            <input type="hidden" name="DepartureDate" value="@date" />
                            <input type="hidden" name="DEP_Airport_CityName" value="@Model.Search.DEP_Airport_CityName" />
                            <input type="hidden" name="DEP_Airport_Code" value="@Model.Search.DEP_Airport_Code" />
                            <input type="hidden" name="DEP_Airport_IsCity" value="@Model.Search.DEP_Airport_IsCity" />
                            <input type="hidden" name="DEP_Airport_Name" value="@Model.Search.DEP_Airport_Name" />
                            <input type="hidden" name="Infant" value="@Model.Search.Infant" />
                            <input type="hidden" name="IsOneWay" value="@Model.Search.IsOneWay" />
                            <input type="hidden" name="NoStop" value="@Model.Search.NoStop" />
                            <input type="hidden" name="ReturnDate" value="@Model.Search.ReturnDate" />
                            <input type="hidden" name="Total" value="@Model.Search.Total" />

                            <button type="button" class="btn btn-link" id="btnFromPreviousDay"><span class="fa fa-angle-left"></span><span class="sr-only">Önceki Gün</span></button>
                        }
                        <button type="button" class="btn btn-link"> <span id="fromChangeDateStr">@Model.Search.DepartureDate.Replace('-', '.')</span> </button>
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "FromNextDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.DepartureDate).AddDays(1).ToString("dd-MM-yyyy");
                            <input type="hidden" name="Adult" value="@Model.Search.Adult" />
                            <input type="hidden" name="ARR_Airport_CityName" value="@Model.Search.ARR_Airport_CityName" />
                            <input type="hidden" name="ARR_Airport_Code" value="@Model.Search.ARR_Airport_Code" />
                            <input type="hidden" name="ARR_Airport_IsCity" value="@Model.Search.ARR_Airport_IsCity" />
                            <input type="hidden" name="ARR_Airport_Name" value="@Model.Search.ARR_Airport_Name" />
                            <input type="hidden" name="CabinClass" value="@Model.Search.CabinClass" />
                            <input type="hidden" name="Child" value="@Model.Search.Child" />
                            <input type="hidden" name="DepartureDate" value="@date" />
                            <input type="hidden" name="DEP_Airport_CityName" value="@Model.Search.DEP_Airport_CityName" />
                            <input type="hidden" name="DEP_Airport_Code" value="@Model.Search.DEP_Airport_Code" />
                            <input type="hidden" name="DEP_Airport_IsCity" value="@Model.Search.DEP_Airport_IsCity" />
                            <input type="hidden" name="DEP_Airport_Name" value="@Model.Search.DEP_Airport_Name" />
                            <input type="hidden" name="Infant" value="@Model.Search.Infant" />
                            <input type="hidden" name="IsOneWay" value="@Model.Search.IsOneWay" />
                            <input type="hidden" name="NoStop" value="@Model.Search.NoStop" />
                            <input type="hidden" name="ReturnDate" value="@date" />
                            <input type="hidden" name="Total" value="@Model.Search.Total" />

                            <button type="button" class="btn btn-link" id="btnFromNextDay"><span class="fa fa-angle-right"></span><span class="sr-only">Sonraki Gün</span></button>
                        }
                    </span>
                </div>
                <div id="divGidisChartCollapse" class="collapse weekly-bars">
                    <div class="bars">
                        <div class="clearfix">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="flights-list" id="sectionFlightContainer">
        <div class="container">
            <div class="tab-pane show active" id="tabFlights" role="tabpanel" aria-labelledby="oneway">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <ul class="navigate">
                            <li class="nav-departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Kalkış</li>
                            <li class="col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">Aktarma</li>
                            <li class="nav-arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Varış</li>
                            <li class="col-sm-1"></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı promosyon sınıfıdır. İade ve değişiklik yapılamaz.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Promosyonlu</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı ekonomi sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Ekonomi</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı business sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Business</span></li>
                        </ul>
                        <div id="selectedFlight"></div>

                        <ul id="flight" class="models-list options-list">
                            @{

                                foreach (var flight in Model.Flight.result.flights)
                                {
                                    if (flight.returnFlight == false)
                                    {
                                        if (flight.legs.Count == 1)
                                        {
                                            <li class="flight-itinerary"
                                                pricingType="@flight.pricingType"
                                                providerKey="@flight.providerKey"
                                                packageId="@flight.packageId"
                                                departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                                totalTime="@flight.flightTimeHour"
                                                minPrice="@flight.fares[0].totalSingleAdultFare"
                                                airline="@flight.legs[0].carrierCode"
                                                data-toggle="collapse"
                                                data-target="#collapse-@i"
                                                aria-expanded="false"
                                                aria-controls="collapse-@i"
                                                data-hasstop="False">
                                                <div class="airlines">
                                                    <div class="content">
                                                        <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                        <br />
                                                    </div>
                                                </div>
                                                <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                    </div>
                                                </div>
                                                <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="date">@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk</div>
                                                        <div class="airport">
                                                            <div class="stop">
                                                                <div class="stop-row">DİREKT</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].arrivalCityName <br /></span> @flight.legs[0].arrivalAirport</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-1 "></div>
                                                @{
                                                    var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                    var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                    var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);

                                                    if (promo != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@promo.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (economy != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@economy.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (business != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@business.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                }
                                                <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flight">
                                                    <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                        <thead>
                                                            <tr>
                                                                <th class="col-sm-3">UÇUŞ</th>
                                                                <th class="col-sm-3">KALKIŞ</th>
                                                                <th class="col-sm-3">VARIŞ</th>
                                                                <th class="col-sm-3">SÜRE</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <tr class="arrival">
                                                                <td class="flights-airlines">
                                                                    <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                                    <strong>@flight.legs[0].operatorName</strong>
                                                                    <br>@flight.legs[0].flightNo
                                                                </td>
                                                                <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</strong> @flight.legs[0].departureAirport  <span>@flight.legs[0].departureCityName</span></td>
                                                                <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</strong>  @flight.legs[0].arrivalAirport        <span>@flight.legs[0].arrivalCityName</span>    </td>
                                                                <td><strong>@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk </strong><br>        uçuş süresi    </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </li>
                                        }
                                        else
                                        {
                                            <li class="flight-itinerary"
                                                pricingType="@flight.pricingType"
                                                providerKey="@flight.providerKey"
                                                packageId="@flight.packageId"
                                                departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                                totalTime="@flight.flightTimeHour"
                                                minPrice="@flight.fares[0].totalSingleAdultFare"
                                                airline="@flight.legs[0].carrierCode"
                                                data-toggle="collapse"
                                                data-target="#collapse-@i"
                                                aria-expanded="false"
                                                aria-controls="collapse-@i"
                                                data-hasstop="True">
                                                <div class="airlines">
                                                    <div class="content">
                                                        <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                        <br />
                                                    </div>
                                                </div>
                                                <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                    </div>
                                                </div>
                                                <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="date">
                                                            @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) / 60) s @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) % 60) dk
                                                        </div>
                                                        <div class="airport">
                                                            <div class="stop">
                                                                <div class="stop-row-half">AKTARMA</div>
                                                                <span class="ball">  @(flight.legs.Count - 1) </span>
                                                                <div class="stop-row-half">AKTARMA</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                    <div class="content">
                                                        <div class="time">@Convert.ToDateTime(flight.legs.LastOrDefault().localArrivalDate).ToString("HH:mm")</div>
                                                        <div class="airport"><span class="hidden-xs">@flight.legs.LastOrDefault().arrivalCityName <br /></span> @flight.legs.LastOrDefault().arrivalAirport</div>
                                                    </div>
                                                </div>
                                                <div class="col-sm-1 "></div>
                                                @{
                                                    var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                    var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                    var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);

                                                    if (promo != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@promo.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@promo.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (economy != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@economy.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@economy.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }
                                                    if (business != null)
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                            <div class="content">

                                                                <div class="pricedata visible-xs">@business.type</div>
                                                                @{ if (flight.providerKey == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="price">
                                                                            <strong class="amount">
                                                                                @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                                <span class="sup">
                                                                                    '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                    <span class="desc">@business.currency</span>
                                                                                </span>
                                                                            </strong>
                                                                        </div>
                                                                    }
                                                                }

                                                                <div class="per-person">
                                                                    vergi dahil
                                                                </div>
                                                                <div class="choose">
                                                                    <label class="radio">

                                                                        <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Go','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                    </label>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                            <div class="content"> </div>
                                                        </div>
                                                    }

                                                }
                                                <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flight">
                                                    <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                        <thead>
                                                            <tr>
                                                                <th class="col-sm-3">UÇUŞ</th>
                                                                <th class="col-sm-3">KALKIŞ</th>
                                                                <th class="col-sm-3">VARIŞ</th>
                                                                <th class="col-sm-3">SÜRE</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var leg in flight.legs)
                                                            {
                                                                <tr class="arrival">
                                                                    <td class="flights-airlines">
                                                                        <span class="icon-carrier-@leg.operatorCode"></span>
                                                                        <strong>@leg.operatorName</strong>
                                                                        <br>@leg.flightNo
                                                                    </td>
                                                                    <td><strong class="time">@Convert.ToDateTime(leg.localDepartureDate).ToString("HH:mm")</strong> @leg.departureAirport  <span>@leg.departureCityName</span></td>
                                                                    <td><strong class="time">@Convert.ToDateTime(leg.localArrivalDate).ToString("HH:mm")</strong>  @leg.arrivalAirport        <span>@leg.arrivalCityName</span>    </td>
                                                                    <td><strong>@(leg.legDurationMinute / 60) s @(leg.legDurationMinute % 60) dk</strong><br>        uçuş süresi    </td>
                                                                </tr>
                                                                if (leg.waitTimeBeforeNextLeg > 0)
                                                                {
                                                                    <tr class="arrival">

                                                                        @if (leg.waitTimeBeforeNextLeg / 60 > 0)
                                                                        {
                                                                            <td colspan="4">
                                                                                Bekleme Süresi : @(leg.waitTimeBeforeNextLeg / 60) s @(leg.waitTimeBeforeNextLeg % 60) dk
                                                                            </td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td colspan="4">
                                                                                @(leg.waitTimeBeforeNextLeg % 60)dk
                                                                            </td>

                                                                        }
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </li>
                                        }
                                    }

                                    i++;
                                }

                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="result-title">
        <div class="container">
            <div class="row">
                <div class="heading-title">
                    <h2><i class="icon-plane"></i> DÖNÜŞ</h2>
                    <p class="font-lato size-19">
                        <strong>@Model.Search.ARR_Airport_CityName - @Model.Search.DEP_Airport_CityName</strong>, <strong class="text-black">@Model.Search.ReturnDate.Replace('-', '.')</strong>
                        <a class="nav-link weekly dropdown-toggle collapsed" href="#" data-toggle="collapse" data-target="#divDonusChartCollapse" aria-controls="divDonusChartCollapse" aria-expanded="false" aria-label="Toggle navigation">
                            <i class="fa fa-line-chart"></i> Haftalık Fiyatlar
                        </a>
                    </p>
                    <span class="badge btn-group dropup">
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "ReturnPreviousDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.ReturnDate).AddDays(-1).ToShortDateString();
                            <input type="hidden" name="Adult" value="@Model.Search.Adult" />
                            <input type="hidden" name="ARR_Airport_CityName" value="@Model.Search.ARR_Airport_CityName" />
                            <input type="hidden" name="ARR_Airport_Code" value="@Model.Search.ARR_Airport_Code" />
                            <input type="hidden" name="ARR_Airport_IsCity" value="@Model.Search.ARR_Airport_IsCity" />
                            <input type="hidden" name="ARR_Airport_Name" value="@Model.Search.ARR_Airport_Name" />
                            <input type="hidden" name="CabinClass" value="@Model.Search.CabinClass" />
                            <input type="hidden" name="Child" value="@Model.Search.Child" />
                            <input type="hidden" name="DepartureDate" value="@Model.Search.DepartureDate" />
                            <input type="hidden" name="DEP_Airport_CityName" value="@Model.Search.DEP_Airport_CityName" />
                            <input type="hidden" name="DEP_Airport_Code" value="@Model.Search.DEP_Airport_Code" />
                            <input type="hidden" name="DEP_Airport_IsCity" value="@Model.Search.DEP_Airport_IsCity" />
                            <input type="hidden" name="DEP_Airport_Name" value="@Model.Search.DEP_Airport_Name" />
                            <input type="hidden" name="Infant" value="@Model.Search.Infant" />
                            <input type="hidden" name="IsOneWay" value="@Model.Search.IsOneWay" />
                            <input type="hidden" name="NoStop" value="@Model.Search.NoStop" />
                            <input type="hidden" name="ReturnDate" value="@date" />
                            <input type="hidden" name="Total" value="@Model.Search.Total" />
                            <button type="button" class="btn btn-link" id="btnReturnPreviousDay"><span class="fa fa-angle-left"></span><span class="sr-only">Önceki Gün</span></button>
                        }

                        <button type="submit" class="btn btn-link"> <span id="fromChangeDateStr">@Model.Search.ReturnDate.Replace('-', '.')</span> </button>
                        @using (Html.BeginForm("Result", "Flight", FormMethod.Post, new { style = "display:contents", id = "ReturnNextDayForm" }))
                        {
                            var date = Convert.ToDateTime(Model.Search.ReturnDate).AddDays(1).ToString("dd-MM-yyyy");
                            <input type="hidden" name="Adult" value="@Model.Search.Adult" />
                            <input type="hidden" name="ARR_Airport_CityName" value="@Model.Search.ARR_Airport_CityName" />
                            <input type="hidden" name="ARR_Airport_Code" value="@Model.Search.ARR_Airport_Code" />
                            <input type="hidden" name="ARR_Airport_IsCity" value="@Model.Search.ARR_Airport_IsCity" />
                            <input type="hidden" name="ARR_Airport_Name" value="@Model.Search.ARR_Airport_Name" />
                            <input type="hidden" name="CabinClass" value="@Model.Search.CabinClass" />
                            <input type="hidden" name="Child" value="@Model.Search.Child" />
                            <input type="hidden" name="DepartureDate" value="@Model.Search.DepartureDate" />
                            <input type="hidden" name="DEP_Airport_CityName" value="@Model.Search.DEP_Airport_CityName" />
                            <input type="hidden" name="DEP_Airport_Code" value="@Model.Search.DEP_Airport_Code" />
                            <input type="hidden" name="DEP_Airport_IsCity" value="@Model.Search.DEP_Airport_IsCity" />
                            <input type="hidden" name="DEP_Airport_Name" value="@Model.Search.DEP_Airport_Name" />
                            <input type="hidden" name="Infant" value="@Model.Search.Infant" />
                            <input type="hidden" name="IsOneWay" value="@Model.Search.IsOneWay" />
                            <input type="hidden" name="NoStop" value="@Model.Search.NoStop" />
                            <input type="hidden" name="ReturnDate" value="@date" />
                            <input type="hidden" name="Total" value="@Model.Search.Total" />

                            <button type="button" class="btn btn-link" id="btnReturnNextDay"><span class="fa fa-angle-right"></span><span class="sr-only">Sonraki Gün</span></button>
                        }
                    </span>
                </div>
                <div id="divDonusChartCollapse" class="collapse weekly-bars">
                    <div class="bars">
                        <div class="clearfix">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="flights-list" id="sectionReturnContainer">
        <div class="container">
            <div class="tab-pane show active" id="tabFlightsReturn" role="tabpanel" aria-labelledby="oneway">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <ul class="navigate">
                            <li class="nav-departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Kalkış</li>
                            <li class="col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">Aktarma</li>
                            <li class="nav-arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">Varış</li>
                            <li class="col-sm-1"></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı promosyon sınıfıdır. İade ve değişiklik yapılamaz.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Promosyonlu</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı ekonomi sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Ekonomi</span></li>
                            <li class="col-sm-2 col-xs-2 hidden-xs"><span class="" data-toggle="tooltip" data-placement="bottom" title="Bu ücret sınıfı business sınıfıdır. İade ve değişiklik yapılır.Daha detaylı bilgi için kuralları okuyunuz."><i class="icon-question-sign"></i> Business</span></li>
                        </ul>
                        <div id="selectedFlightReturn"></div>

                        <ul id="flightReturn" class="models-list options-list">
                            @foreach (var flight in Model.Flight.result.flights)
                            {
                                if (flight.returnFlight == true)
                                {
                                    if (flight.legs.Count == 1)
                                    {
                                        <li class="flight-itinerary"
                                            pricingType="@flight.pricingType"
                                            providerKey="@flight.providerKey"
                                            packageId="@flight.packageId"
                                            departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                            totalTime="@flight.flightTimeHour"
                                            minPrice="@flight.fares[0].totalSingleAdultFare"
                                            airline="@flight.legs[0].carrierCode"
                                            data-toggle="collapse"
                                            data-target="#collapse-@i"
                                            aria-expanded="false"
                                            aria-controls="collapse-@i"
                                            data-hasstop="False">
                                            <div class="airlines">
                                                <div class="content">
                                                    <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                    <br />
                                                </div>
                                            </div>
                                            <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                    <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                </div>
                                            </div>
                                            <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="date">@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk</div>
                                                    <div class="airport">
                                                        <div class="stop">
                                                            <div class="stop-row">DİREKT</div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</div>
                                                    <div class="airport"><span class="hidden-xs">@flight.legs[0].arrivalCityName <br /></span> @flight.legs[0].arrivalAirport</div>
                                                </div>
                                            </div>
                                            <div class="col-sm-1 "></div>
                                            @{
                                                var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);

                                                if (promo != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@promo.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@promo.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@promo.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }

                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }
                                                if (economy != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@economy.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@economy.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@economy.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }

                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }
                                                if (business != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@business.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@business.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@business.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }
                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }

                                            }

                                            <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flight">
                                                <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                    <thead>
                                                        <tr>
                                                            <th class="col-sm-3">UÇUŞ</th>
                                                            <th class="col-sm-3">KALKIŞ</th>
                                                            <th class="col-sm-3">VARIŞ</th>
                                                            <th class="col-sm-3">SÜRE</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <tr class="arrival">
                                                            <td class="flights-airlines">
                                                                <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                                <strong>@flight.legs[0].operatorName</strong>
                                                                <br>@flight.legs[0].flightNo
                                                            </td>
                                                            <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</strong> @flight.legs[0].departureAirport  <span>@flight.legs[0].departureCityName</span></td>
                                                            <td><strong class="time">@Convert.ToDateTime(flight.legs[0].localArrivalDate).ToString("HH:mm")</strong>  @flight.legs[0].arrivalAirport        <span>@flight.legs[0].arrivalCityName</span>    </td>
                                                            <td><strong>@(flight.legs[0].legDurationMinute / 60) s @(flight.legs[0].legDurationMinute % 60) dk </strong><br>        uçuş süresi    </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="flight-itinerary"
                                            pricingType="@flight.pricingType"
                                            providerKey="@flight.providerKey"
                                            packageId="@flight.packageId"
                                            departureTime="@flight.legs.FirstOrDefault().departureTime.ToShortTimeString()"
                                            totalTime="@flight.flightTimeHour"
                                            minPrice="@flight.fares[0].totalSingleAdultFare"
                                            airline="@flight.legs[0].carrierCode"
                                            data-toggle="collapse"
                                            data-target="#collapse-@i"
                                            aria-expanded="false"
                                            aria-controls="collapse-@i"
                                            data-hasstop="True">

                                            <div class="airlines">
                                                <div class="content">
                                                    <span class="icon-carrier-@flight.legs[0].operatorCode"></span>
                                                    <br />
                                                </div>
                                            </div>
                                            <div class="departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="time">@Convert.ToDateTime(flight.legs[0].localDepartureDate).ToString("HH:mm")</div>
                                                    <div class="airport"><span class="hidden-xs">@flight.legs[0].departureCityName <br /></span> @flight.legs[0].departureAirport</div>
                                                </div>
                                            </div>
                                            <div class="stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="date">
                                                        @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) / 60) s @((flight.legs.Sum(x => x.legDurationMinute) + flight.legs.Sum(w => w.waitTimeBeforeNextLeg)) % 60) dk
                                                    </div>
                                                    <div class="airport">
                                                        <div class="stop">
                                                            <div class="stop-row-half">AKTARMA</div>
                                                            <span class="ball">  @(flight.legs.Count - 1) </span>
                                                            <div class="stop-row-half">AKTARMA</div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2">
                                                <div class="content">
                                                    <div class="time">@Convert.ToDateTime(flight.legs.LastOrDefault().localArrivalDate).ToString("HH:mm")</div>
                                                    <div class="airport"><span class="hidden-xs">@flight.legs.LastOrDefault().arrivalCityName <br /></span> @flight.legs.LastOrDefault().arrivalAirport</div>
                                                </div>
                                            </div>
                                            <div class="col-sm-1 "></div>
                                            @{
                                                var promo = flight.fares.FirstOrDefault(x => x.type == "PROMO" && x.freeSeatCount > 0);
                                                var economy = flight.fares.FirstOrDefault(x => x.type == "ECONOMY" && x.freeSeatCount > 0);
                                                var business = flight.fares.FirstOrDefault(x => x.type == "BUSINESS" && x.freeSeatCount > 0);

                                                if (promo != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@promo.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@promo.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && promo.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((promo.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@promo.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((promo.personFares.Sum(x => x.total) + promo.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@promo.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }

                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@promo.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }
                                                if (economy != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@economy.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@economy.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && economy.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((economy.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@economy.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((economy.personFares.Sum(x => x.total) + economy.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@economy.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }

                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@economy.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }
                                                if (business != null)
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="@business.type" status="active">
                                                        <div class="content">

                                                            <div class="pricedata visible-xs">@business.type</div>
                                                            @{ if (flight.providerKey == "Pegasus" && business.personFares.Sum(x => x.agencyCommission) <= 15)
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((business.personFares.Sum(x => x.total)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@business.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                                else
                                                                {
                                                                    <div class="price">
                                                                        <strong class="amount">
                                                                            @((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[0])
                                                                            <span class="sup">
                                                                                '@((business.personFares.Sum(x => x.total) + business.personFares.Sum(x => x.agencyCommission)).ToString("F").Split(',')[1])
                                                                                <span class="desc">@business.currency</span>
                                                                            </span>
                                                                        </strong>
                                                                    </div>
                                                                }
                                                            }

                                                            <div class="per-person">
                                                                vergi dahil
                                                            </div>
                                                            <div class="choose">
                                                                <label class="radio">

                                                                    <input class="rbtnChooseJourney" type="button" onclick="SelectFlight('@Model.Flight.result.searchId','@flight.id','@business.type','Return','@flight.pricingType','@flight.providerKey','@flight.packageId')">  <i></i> SEÇ
                                                                </label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="pricing col-sm-2 col-xs-4" fareType="PROMO" status="full">
                                                        <div class="content"> </div>
                                                    </div>
                                                }

                                            }
                                            <div id="collapse-@i" class="detail-table collapse" aria-labelledby="heading-@i" data-parent="#flightReturn">
                                                <table border="0" cellpadding="0" cellspacing="0" class="table accordion-table table-bordered table-gray">
                                                    <thead>
                                                        <tr>
                                                            <th class="col-sm-3">UÇUŞ</th>
                                                            <th class="col-sm-3">KALKIŞ</th>
                                                            <th class="col-sm-3">VARIŞ</th>
                                                            <th class="col-sm-3">SÜRE</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (var leg in flight.legs)
                                                        {
                                                            <tr class="arrival">
                                                                <td class="flights-airlines">
                                                                    <span class="icon-carrier-@leg.carrierCode"></span>
                                                                    <strong>@leg.carrierName</strong>
                                                                    <br>@leg.flightNo
                                                                </td>
                                                                <td><strong class="time">@Convert.ToDateTime(leg.localDepartureDate).ToString("HH:mm")</strong> @leg.departureAirport  <span>@leg.departureCityName</span></td>
                                                                <td><strong class="time">@Convert.ToDateTime(leg.localArrivalDate).ToString("HH:mm")</strong>  @leg.arrivalAirport        <span>@leg.arrivalCityName</span>    </td>
                                                                <td><strong>@(leg.legDurationMinute / 60) s @(leg.legDurationMinute % 60) dk</strong><br>        uçuş süresi    </td>
                                                            </tr>
                                                            if (leg.waitTimeBeforeNextLeg > 0)
                                                            {
                                                                <tr class="arrival">

                                                                    @if (leg.waitTimeBeforeNextLeg / 60 > 0)
                                                                    {
                                                                        <td colspan="4">
                                                                            Bekleme Süresi : @(leg.waitTimeBeforeNextLeg / 60) s @(leg.waitTimeBeforeNextLeg % 60) dk
                                                                        </td>
                                                                    }
                                                                    else
                                                                    {
                                                                        <td colspan="4">
                                                                            @(leg.waitTimeBeforeNextLeg % 60)dk
                                                                        </td>

                                                                    }
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </li>
                                    }
                                }

                                i++;
                            }
                        </ul>
                        <div class="container">
                            <div class="row">
                                <div class="col-md-12 text-right">
                                    @using (Html.BeginForm("Payment", "Flight", FormMethod.Post))
                                    {
                                        <button type="submit" class="btn btn-link btn-pay" style="display:none" onclick="@Url.Action(" Payment", "Flight" , new { k="" })">Ödeme Yap <i class="fa fa-angle-double-right"></i></button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<div id="preloader">
    <div class="inner">
        <p>
            <span class="route text-black size-30">
                <span id="spnDeparture">İstanbul (IST)</span>
                <i class="fa fa-arrow-circle-o-right"></i>
                <span id="spnArrival">Erzincan (ERC)</span>
            </span>
            <br>
            <span class="size-14" id="spnDateAndPax">
                16 Haziran 2018 - 1 Yetişkin
            </span>
        </p>
        <h5 class="size-18">Sizin için en keyifli uçuşları arıyoruz.<br>Lütfen Bekleyiniz.</h5>
        <div class="wrapper">
            <div id="plane">
                <i class="fa fa-plane"></i>
            </div>
            <div class="loader">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
    </div>
</div>

<div class="flights-sidebar col-lg-3 col-md-3 col-sm-3 col-lg-pull-9 col-md-pull-9 col-sm-pull-9 nopadding" style="display: none;">
    <div id="flights-sidebar-anchor"></div>
</div>
<section style="text-align: center">
    En ucuz  <strong>Erzincan</strong> Uçak Bileti mi arıyorsunuz?
    En Ucuz <strong>Erzincan</strong> Uçak Bileti fiyatlarına kolayca ulaşın, yüzlerce havayolu seçeneği ve taksitli uçak bileti ödeme imkanı ile.
    Türk Hava Yolları, Anadolujet, Pegasus.
</section>
<section class="flights-list" id="tabContentFlight" style="display:none"></section>

@section js{

    <script src="~/Scripts/adas.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    @*
        <script src="~/Content/assets/js/scripts.js"></script>*@
    <script type="text/javascript">
    function timeConvert(n) {
        var num = n;
        var hours = (num / 60);
        var rhours = Math.floor(hours);
        var minutes = (hours - rhours) * 60;
        var rminutes = Math.round(minutes);
        if (rhours + rminutes == 0) {
            return 0;
        } else {
            return rhours + " s " + rminutes + " dk";
        }
    }
    function SelectFlight(searchId, flightId, fareType, flightType, pricingType, providerKey, packageId) {

        var model = {
            searchId: searchId,
            flightId: flightId,
            fareType: fareType,
            flightType: flightType,
            pricingType: pricingType,
            packageId: packageId,
            providerKey: providerKey
        };

        GetAjax("@Url.Action("SelectFlight", "Flight")", model, "true", "POST", function (data) {
            debugger;
            var html = "";
            if (data.legs.length == 1) {
                var totaldurationminute = 0;
                for (var i = 0; i < data.legs.length; i++) {
                    totaldurationminute += data.legs[i].legDurationMinute + data.legs[i].waitTimeBeforeNextLeg;
                }

                for (var i = 0; i < data.legs.length; i++) {
                    html += "<ul>";
                    html += "<li class=\"flight-itinerary\" pricingtype=\"" + data.pricingType + "\" providerkey=\"" + data.providerKey + "\" packageid=\"" + data.packageId + "\" data-hasstop=\"False\" departuretime=\"" + data.legs[0].departureTime + "\" totaltime=\"" + totaldurationminute + "\" minprice=\"1148\" airline=\"" + data.legs[0].carrierCode + "\" data-toggle=\"collapse\" data-target=\"#collapse-a\" aria-expanded=\"false\" aria-controls=\"collapse-a\">";
                    html += "<div class=\"airlines\">";
                    html += "<div class=\"content\">";
                    html += "<span class=\"icon-carrier-" + data.legs[i].operatorCode + "\"></span>";
                    html += " </div>";
                    html += " </div>";
                    html += "<div class=\"departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2\">";
                    html += "<div class=\"content\">";
                    html += "<div class=\"time\">" + moment(data.legs[i].localDepartureDate).format("HH:mm") + "</div>";
                    html += "<div class=\"airport\">" + data.legs[i].departureCityName + "<br> " + data.legs[i].departureAirport + "</div>";
                    html += "</div>";
                    html += "</div>";
                    html += "<div class=\"stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2\">";
                    html += "<div class=\"content\">";
                    html += "<div class=\"date\">" + timeConvert(data.legs[i].legDurationMinute) + "</div>";
                    html += "<div class=\"airport\">";
                    html += "<div class=\"stop\">";
                    html += "<div class=\"stop-row\">" + (data.legs.lenght > 0 ? "AKTARMALI" : "DİREKT") + "</div>";
                    html += "</div>";
                    html += "</div>";
                    html += "</div>";
                    html += "</div>";
                    html += "<div class=\"arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2\">";
                    html += "<div class=\"content\">";
                    html += "<div class=\"time\">" + moment(data.legs[i].localArrivalDate).format("HH:mm") + "</div>";
                    html += "<div class=\"airport\">" + data.legs[i].arrivalCityName + "<br> " + data.legs[i].arrivalAirport + "</div>";
                    html += "</div>";
                    html += "</div>";
                    html += "<div class=\"col-sm-5\"></div>";
                    html += "<div class=\"pricing col-sm-2 col-xs-4\">";
                    html += "<div class=\"content\">";
                    html += "<div class=\"price\">";
                    html += "<strong class=\"amount\">";
                }
                for (var i = 0; i < data.fares.length; i++) {
                    if (data.fares[i].type == model.fareType) {
                        debugger;
                        for (var j = 0; j < data.fares[i].personFares.length; j++) {
                            if (data.providerKey == "Pegasus") {
                                html += (data.fares[i].personFares[j].total).toFixed(2).split(".")[0];
                                html += "<span class=\"sup\">";
                                html += "'" + (data.fares[i].personFares[j].total).toFixed(2).split(".")[1];
                                html += "<span class=\"desc\">" + data.fares[i].currency + "</span>";
                            }
                            else {
                                html += (data.fares[i].personFares[j].total + data.fares[i].personFares[j].agencyCommission).toFixed(2).split(".")[0];
                                html += "<span class=\"sup\">";
                                html += "'" + (data.fares[i].personFares[j].total + data.fares[i].personFares[j].agencyCommission).toFixed(2).split(".")[1];
                                html += "<span class=\"desc\">" + data.fares[i].currency + "</span>";

                            }

                        }
                    }
                }
                html += "</span>";
                html += "</strong>";
                html += "</div>";
                html += "<div class=\"per-person\">vergi dahil</div>";
                html += "</div>";
                html += "</div>";
                html += "<div id=\"collapse-" + data.id + "\" class=\"detail-table collapse\" aria-labelledby=\"heading-" + data.id + "\" data-parent=\"#flight\">";
                html += "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table accordion-table table-bordered table-gray\">";
                html += "<thead>";
                html += "<tr>";
                html += "<th class=\"col-sm-3\">UÇUŞ</th>";
                html += "<th class=\"col-sm-3\">KALKIŞ</th>";
                html += "<th class=\"col-sm-3\">VARIŞ</th>";
                html += "<th class=\"col-sm-3\">SÜRE</th>";
                html += "</tr>";
                html += "</thead>";
                html += "<tbody>";
                html += "<tr class=\"arrival\">";
            }
            if (data.legs.length > 1) {
                var totaldurationminute = 0;
                for (var i = 0; i < data.legs.length; i++) {
                    totaldurationminute += data.legs[i].legDurationMinute + data.legs[i].waitTimeBeforeNextLeg;
                }

                html += "<li class=\"flight-itinerary\" pricingtype=\"" + data.pricingType + "\" providerkey=\"" + data.providerKey + "\" packageid=\"" + data.packageId + "\" data-hasstop=\"False\" departuretime=\"" + data.legs[0].departureTime + "\" totaltime=\"" + totaldurationminute + "\" minprice=\"1148\" airline=\"" + data.legs[0].carrierCode + "\" data-toggle=\"collapse\" data-target=\"#collapse-b\" aria-expanded=\"false\" aria-controls=\"collapse-b\">";
                html += "<div class=\"airlines\">";
                html += "<div class=\"content\">";
                html += "<span class=\"icon-carrier-" + data.legs[0].operatorCode + "\"></span>";
                html += "<br>";
                html += "</div>";
                html += "</div>";
                html += "<div class=\"departure col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2\">";
                html += "<div class=\"content\">";
                html += "<div class=\"time\">" + moment(data.legs[0].localDepartureDate).format("HH:mm") + "</div>";
                html += "<div class=\"airport\"><span class=\"hidden-xs\">" + data.legs[0].departureCityName + "<br></span> " + data.legs[0].departureAirport + "</div>";
                html += "</div>";
                html += "</div>";
                html += "<div class=\"stops col-sm-1 col-xs-4 col-sm-push-0 col-xs-push-2\">";
                html += "<div class=\"content\">";
                html += "<div class=\"date\">" + timeConvert(totaldurationminute) + "</div>";
                html += "<div class=\"airport\">";
                html += "<div class=\"stop\">";
                html += "<div class=\"stop-row-half\">AKTARMA</div>";
                html += "<span class=\"ball\">  " + data.legs.length + " </span>";
                html += "<div class=\"stop-row-half\">AKTARMA</div>";
                html += "</div>";
                html += "</div>";
                html += "</div>";
                html += "</div>";
                html += "<div class=\"arrival col-sm-2 col-xs-3 col-sm-push-0 col-xs-push-2\">";
                html += "<div class=\"content\">";
                html += "<div class=\"time\">" + moment(data.legs[data.legs.length - 1].localArrivalDate).format("HH:mm") + "</div>";
                html += "<div class=\"airport\"><span class=\"hidden-xs\">" + data.legs[data.legs.length - 1].arrivalCityName + "<br></span> " + data.legs[data.legs.length - 1].arrivalAirport + "</div>";
                html += "</div>";
                html += "</div>";
                html += "<div class=\"col-sm-5 \"></div>";

                for (var i = 0; i < data.fares.length; i++) {

                    if (data.fares[i].type == model.fareType) {
                        debugger;
                        for (var j = 0; j < data.fares[i].personFares.length; j++) {
                            html += "<div class=\"pricing col-sm-2 col-xs-4\" faretype=\"" + data.fares[i].type + "\" status=\"active\">";
                            html += "<div class=\"content\">";
                            html += "<div class=\"pricedata visible-xs\">" + data.fares[i].type + "</div>";
                            html += "<div class=\"price\">";
                            html += "<strong class=\"amount\">";
                            if (data.providerKey == "Pegasus") {
                                html += (data.fares[i].personFares[j].total).toFixed(2).split(".")[0];

                                html += "<span class=\"sup\">";
                                html += "<span class=\"desc\">" + (data.fares[i].personFares[j].total).toFixed(2).split(".")[1] + "</span>";
                                html += "<span class=\"desc\">" + data.fares[i].currency + "</span>";
                            }
                            else {

                                html += (data.fares[i].personFares[j].total + data.fares[i].personFares[j].agencyCommission).toFixed(2).split(".")[0];
                                html += "<span class=\"sup\">";
                                html += "<span class=\"desc\">" + (data.fares[i].personFares[j].total + data.fares[i].personFares[j].agencyCommission).toFixed(2).split(".")[1] + "</span>";
                                html += "<span class=\"desc\">" + data.fares[i].currency + "</span>";
                            }

                            html += "</span>";
                            html += "</strong>";
                            html += "</div>";
                            html += "<div class=\"per-person\">";
                            html += "vergi dahil";
                            html += "</div>";
                            html += "<div class=\"choose\">";
                            html += "<label class=\"radio\">";
                            html += "<input class=\"rbtnChooseJourney\" type=\"button\" onclick=\"WDT.SearchResult.SelectFlight('S:31f88d53-06bd-4daa-b9a0-69bd3d08bde0','m:5:6isa:jpub1s7q:IT:021109bpcjZYoOwN:spjg','PROMO','Go','FREE_FORM','AJ0','0')\">  <i></i> SEÇ";
                            html += "</label>";
                            html += "</div>";
                            html += "</div>";
                            html += "</div>";
                        }
                    }
                }

                html += "<div id=\"collapse-1\" class=\"detail-table collapse show\" aria-labelledby=\"heading-1\" data-parent=\"#flight\" style=\"\">";
                html += "<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"table accordion-table table-bordered table-gray\">";
                html += "<thead>";
                html += "<tr>";
                html += "<th class=\"col-sm-3\">UÇUŞ</th>";
                html += "<th class=\"col-sm-3\">KALKIŞ</th>";
                html += "<th class=\"col-sm-3\">VARIŞ</th>";
                html += "<th class=\"col-sm-3\">SÜRE</th>";
                html += "</tr>";
                html += "</thead>";
                html += "<tbody>";

                for (i = 0; i < data.legs.length; i++) {
                    html += "<tr class=\"arrival\">";
                    html += "<td class=\"flights-airlines\">";
                    html += "<span class=\"icon-carrier-" + data.legs[i].operatorCode + "\"></span>";
                    html += "<strong>" + data.legs[i].operatorName + "</strong>";
                    html += "<br>" + data.legs[i].flightNo;
                    html += "</td>";
                    html += "<td><strong class=\"time\">" + moment(data.legs[i].localDepartureDate).format("HH:mm") + "</strong> " + data.legs[i].departureAirport + "<span> " + data.legs[i].departureCityName + "</span></td>";
                    html += "<td><strong class=\"time\">" + moment(data.legs[i].localArrivalDate).format("HH:mm") + "</strong>  " + data.legs[i].arrivalAirport + "<span> " + data.legs[i].arrivalCityName + "</span>    </td>";
                    html += "<td><strong>" + timeConvert(data.legs[i].legDurationMinute) + "</strong><br>        uçuş süresi    </td>";
                    html += "</tr>";
                    html += "<tr class=\"arrival\">";
                    html += "<td colspan=\"4\">";
                    html += data.legs[i].waitTimeBeforeNextLeg > 0 ? "Bekleme Süresi : " + timeConvert(data.legs[i].waitTimeBeforeNextLeg) : "";
                    html += "</td>";
                    html += "</tr>";
                }
                html += "</tbody>";
                html += "</table>";
                html += "</div>";
                html += "</li>";
            }
            if (model.flightType == 'Go') {
                $("#flight").hide();
                $("#selectedFlight").html(html);
                $("#tabFlights").find(".navigate").hide();

                if ("@Model.Search.IsOneWay" == "True") {
                    $(".btn-pay").show();
                }

            } else {
                $("#flightReturn").hide();

                $("#selectedFlightReturn").html(html);
                $("#tabFlightsReturn").find(".navigate").hide();
                if ("@Model.Search.IsOneWay" == "False") {
                    $("#flightReturn > li.flight-itinerary").show();
                    $("#flightReturn > li.flight-itinerary").each(function (index, item) {
                        var returnPricingType = $(item).attr('pricingType');
                        var returnProviderKey = $(item).attr('providerKey');
                        var returnPackageId = $(item).attr('packageId');
                        debugger;
                        if (returnPricingType == pricingType && returnProviderKey == providerKey && packageId == returnPackageId) {
                            $(item).show();
                        } else {
                            $(item).hide();
                        }
                    })
                    $(".btn-pay").show();
                }

            }
        })
    }
    var noFlightHTML = '<section id="XXXXX"><div class="container"><div class="row"><div class="col-md-12"><h3 class="margin-bottom-10">Aradığınız kriterlere uygun uçuş bulunamadı!</h3><p>Lütfen <a href="/">buraya tıklayarak</a> yeni arama yapınız</p></div></div></div></section>'

    function SetFilter() {
        debugger;
        $("#sectionReturnFlightContainer").show();
        $("#sectionFlightContainer").show();
        $("#sectionReturnNoFlightInfo").remove();
        $("#sectionNoFlightInfo").remove();
        var noStop = $("#chkNoStopFilter").is(':checked');
        var airlineList = [];
        var cabinList = [];
        $(".lblAirline").each(function () {
            if ($(this).is(':checked'))
                airlineList.push($(this).val());
        });
        $(".lblFareType").each(function () {
            if ($(this).is(':checked'))
                cabinList.push($(this).val());
        });

        $(".flight-itinerary").hide();
        if (noStop) {
            $("li[data-hasStop='False']").show();
        } else {
            $(".flight-itinerary").show();
        }
        $(".flight-itinerary").each(function () {
            debugger;
            var isHide = false;
            if (noStop) {
                isHide = $(this).attr('data-hasStop') != 'False';
            } else {
                isHide = false;
            }
            if (!isHide) {
                var airlineCode = $(this).attr('airline');
                isHide = airlineList.indexOf(airlineCode) == -1;
            }
            if (isHide) {
                $(this).hide();
            }
            $(".pricing > .content").show();
            $(".pricing").each(function () {
                var status = $(this).attr('status');
                var cabin = $(this).attr('fareType');
                if (status == 'active') {
                    if (cabinList.indexOf(cabin) == -1)
                        $(this).find('div[class="content"]').hide();
                }
            });
        });

        var goVisible = $("#flight > li.flight-itinerary").filter(':visible').length;
        var returnVisible = $("#flightReturn > li.flight-itinerary").filter(':visible').length;

        if (returnVisible < 1) {
            $("#sectionReturnFlightContainer").hide();
            var html = noFlightHTML.replace('XXXXX', 'sectionReturnNoFlightInfo');
            $("#sectionReturnFlightContainer").before(html);
        }
        else {
            $("#sectionReturnFlightContainer").show();
            $("#sectionReturnNoFlightInfo").remove();
        }

        if (goVisible < 1) {
            $("#sectionFlightContainer").hide();
            var html = noFlightHTML.replace('XXXXX', 'sectionNoFlightInfo');
            $("#sectionFlightContainer").before(html);
        }
        else {
            $("#sectionFlightContainer").show();
            $("#sectionNoFlightInfo").remove();
        }

    }

    var timer = 0;

    function setResetInterval(bool) {
        if (bool) {
            timer = setInterval(function () {
                debugger;
                $("#timeout").modal("show");
            }, 1000 * 60 * 2);
        } else {
            clearInterval(timer);
        }
    }
    function SessionEnd() {
        clearInterval(timer);
        location.href = "/";
    }
    function SessionResume() {
        clearInterval(timer);
        setResetInterval(true);
        window.location.reload();
    }
    $(document).ready(function () {
        setResetInterval(true);
        var _container = jQuery('input.stepper');
        if (_container.length > 0) {
            //  loadScript(plugin_path + 'form.stepper/jquery.stepper.min.js', function () {
            if (jQuery().stepper) {
                jQuery(_container).each(function () {
                    var _t = jQuery(this),
                        _min = _t.attr('min') || null,
                        _max = _t.attr('max') || null;

                    _t.stepper({
                        limit: [_min, _max],
                        floatPrecission: _t.attr('data-floatPrecission') || 2,
                        wheel_step: _t.attr('data-wheelstep') || 0.1,
                        arrow_step: _t.attr('data-arrowstep') || 0.2,
                        allowWheel: _t.attr('data-mousescrool') == "false" ? false : true,
                        UI: _t.attr('data-UI') == "false" ? false : true,
                        // --
                        type: _t.attr('data-type') || "float",
                        preventWheelAcceleration: _t.attr('data-preventWheelAcceleration') == "false" ? false : true,
                        incrementButton: _t.attr('data-incrementButton') || "&blacktriangle;",
                        decrementButton: _t.attr('data-decrementButton') || "&blacktriangledown;",
                        onStep: null,
                        onWheel: null,
                        onArrow: null,
                        onButton: null,
                        onKeyUp: null
                    });

                });

            }

        };

        moment.locale('tr');
        debugger;
        if ($("#hdnIsOneWay").val() == "true") {
            SetPicker(true);
            $("#tekyon-tab").trigger("click");
        }
        else {
            SetPicker(false);
            $("#gidisdonus-tab").trigger("click");
        }
        $("#btn_FSB_OK").click(function () {
            $("#btnGoFlightSearch").trigger("click");
        })
        $("#btnGoFlightSearch").click(function () {
            $("#preloader").fadeIn();
            debugger;
            var toDate = "";
            try {
                toDate = $('#inpRangePicker').data('daterangepicker').endDate.format('DD-MM-YYYY');
            } catch (e) {
                toDate = "";
            }

            var DepartureDate = $('#inpRangePicker').data('daterangepicker').startDate.format('DD-MM-YYYY');
            if ($("#hdnIsOneWay").val() == 'true') {
                $("#ReturnDate").val("");

            }
            else {
                $("#ReturnDate").val(toDate);

            }

            $("#DepartureDate").val(DepartureDate);

            var Adult = $("#txtAdultCount").val();
            var Child = $("#txtChildCount").val();
            var Infant = $("#txtInfantCount").val();
            $("#Adult").val(Adult);
            $("#Child").val(Child);
            $("#Infant").val(Infant);
            var cabinclass = $("#ddlClass").val();
            $("#CabinClass").val(cabinclass);
            var depCity = $("#dvDeparture").find('span[class="label-short"]').text();
            var depAirport = $("#dvDeparture").find('span[class="label-airport"]').text();
            var depCode = $("#dvDeparture").find('span[class="label-code"]').text();

            var arrCity = $("#dvReturn").find('span[class="label-short"]').text();
            var arrAirport = $("#dvReturn").find('span[class="label-airport"]').text();
            var arrCode = $("#dvReturn").find('span[class="label-code"]').text();

            $("#DEP_Airport_Name").val(depAirport);
            $("#DEP_Airport_Code").val(depCode);
            $("#DEP_Airport_CityName").val(depCity);

            $("#ARR_Airport_Name").val(arrAirport);
            $("#ARR_Airport_Code").val(arrCode);
            $("#ARR_Airport_CityName").val(arrCity);
            $("#spnDeparture").html(depCity + "(" + depCode + ")");
            $("#spnArrival").html(arrCity + "(" + arrCode + ")");
            var paxArray = [];
            if (Adult > 0)
                paxArray.push(Adult + " Yetişkin ");
            if (Child > 0)
                paxArray.push(Child + " Çocuk ");
            if (Infant > 0)
                paxArray.push(Infant + " Bebek ");
            $("#spnDateAndPax").html(DepartureDate + " - " + paxArray.join(","));
            $("#SearchForm").submit();
        })

        $("#adas-home-tagline").sticky({ topSpacing: 0 });
        $('#layerslider').layerSlider({ skin: 'noskin', skinsPath: 'Content/assets/plugins/slider.layerslider/skins/', pauseOnHover: false, navButtons: true, slideDirection: 'top' });
        $("#tekyon-tab").click(function () {
            $("#hdnIsOneWay").val(true)
            SetPicker(true);
        });
        $("#gidisdonus-tab").click(function () {
            $("#hdnIsOneWay").val(false)
            SetPicker(false);
        });

        if ($(".fancy-form.mobile.departure").length > 0) {
            $(".fancy-form.mobile.departure").focusin(function () {
                $("#slider").animate({ "margin-bottom": "200px" }, 1000, 'easeInOutExpo');
                $("body").animate({ scrollTop: 80 }, 1000, 'easeInOutExpo');
                $(this).toggleClass("active");
            });
            $(".fancy-form.mobile.departure").focusout(function () {
                $("#slider").animate({ "margin-bottom": "0" }, 1000, 'easeInOutExpo');
                $("body").animate({ scrollTop: 0 }, 1000, 'easeInOutExpo');
                $(this).toggleClass("active");
            });

        }
        var $popoverItem = $('#dvPerson .custom-input').popover({
            container: '.search-engine',
            content: $(".flight-information"),
            html: true,
            placement: 'bottom'
        });
        var hasStepper = false;
        $popoverItem.on('shown.bs.popover', function () {
            if (!hasStepper) {
                hasStepper = true;
                //_stepper();
            }
        });

        //$("#btn_FSB_OK").click(WDT.SearchBox.SearchFlight);

        $(document).on("change", "#adult, #child, #infant", CalcPersonCount);
        SetAutocomplete();
        //$('#dvDeparture').on('show.bs.dropdown', function () {
        //    setTimeout(function () { $("#selectBoardingTerminal").focus(); }, 100);
        //});
        //$('#dvReturn').on('show.bs.dropdown', function () {
        //    setTimeout(function () { $("#selectLandingTerminal").focus(); }, 100);
        //});
        var isOneWay = $("#hdnflightType").val();
        //$("#btnGoFlightSearch").click(WDT.SearchBox.SearchFlight);

        $("#btnChangePorts").click(function () {
            var depCity = $("#dvReturn").find('span[class="label-short"]').text();
            var depAirport = $("#dvReturn").find('span[class="label-airport"]').text();
            var depCode = $("#dvReturn").find('span[class="label-code"]').text();

            var arrCity = $("#dvDeparture").find('span[class="label-short"]').text();
            var arrAirport = $("#dvDeparture").find('span[class="label-airport"]').text();
            var arrCode = $("#dvDeparture").find('span[class="label-code"]').text();

            $("#dvDeparture").find('span[class="label-short"]').text(arrCity);
            $("#dvDeparture").find('span[class="label-airport"]').text(arrAirport);
            $("#dvDeparture").find('span[class="label-code"]').text(arrCode);
            $('#DEP_Airport_Code').val(arrCode);

            $("#dvReturn").find('span[class="label-short"]').text(depCity);
            $("#dvReturn").find('span[class="label-airport"]').text(depAirport);
            $("#dvReturn").find('span[class="label-code"]').text(depCode);
            $('#ARR_Airport_Code').val(depCode);

        });
        //WDT.SearchBox.CreateBox();
        //WDT.SearchPnr.Init();
        //WDT.Member.LoginRequired();
        $("#btnFromPreviousDay").click(function () {
            $("#FromPreviousDayForm").submit();
            $("#preloader").fadeIn();
        })
        $("#btnFromNextDay").click(function () {
            $("#FromNextDayForm").submit();
            $("#preloader").fadeIn();
        })

        $("#btnReturnPreviousDay").click(function () {
            debugger;
            $("#ReturnPreviousDayForm").submit();
            $("#preloader").fadeIn();
        })
        $("#btnReturnNextDay").click(function () {
            $("#ReturnNextDayForm").submit();
            $("#preloader").fadeIn();
        })

        if ($("#fromChangeDateStr").text() == new Date().toLocaleDateString()) {
            $("#btnFromPreviousDay").hide();
            $("#btnReturnPreviousDay").hide();
        }

        $(".lblAirline").click(function () {
            SetFilter();
        });
        $(".lblFareType").click(function () {
            SetFilter();
        });

        $("#chkNoStopFilter").click(function () {
            SetFilter();
        });

        $("#pills-home-tab,#pills-profile-tab,#pills-contact-tab").click(function () {
            var currentOrder = $(this).data('orderby');
            var currentOrderType = $(this).data('orderType');
            console.log(currentOrder);
            var $items = $("#flight > li.flight-itinerary");
            var opOrder = $items.sort(function (a, b) {
                var aPrice = parseFloat($(a).attr(currentOrder));
                var bPrice = parseFloat($(b).attr(currentOrder));
                if (currentOrderType == 'asc') {
                    return (aPrice < bPrice) ? -1 : 1;
                }
                else {
                    return (aPrice < bPrice) ? 1 : -1;
                }
            });
            $("#flight").find('li').remove();
            $("#flight").html(opOrder);
            $items = $("#flightReturn > li.flight-itinerary");
            var opOrder = $items.sort(function (a, b) {
                var aPrice = parseFloat($(a).attr(currentOrder));
                var bPrice = parseFloat($(b).attr(currentOrder));
                if (currentOrderType == 'asc') {
                    return (aPrice < bPrice) ? -1 : 1;
                }
                else {
                    return (aPrice < bPrice) ? 1 : -1;
                }
            });
            $("#flightReturn").html(opOrder);
            $(this).data('orderType', currentOrderType == "asc" ? "desc" : "asc");
        });

        var model = {
            IsOneWay: "@Model.Search.IsOneWay",
            DEP_Airport_Code: "@Model.Search.DEP_Airport_Code",
            DEP_Airport_Name: "@Model.Search.DEP_Airport_Name",
            DEP_Airport_CityName: "@Model.Search.DEP_Airport_CityName",
            DEP_Airport_IsCity: "@Model.Search.DEP_Airport_IsCity",
            DepartureDate: "@Model.Search.DepartureDate",
            ARR_Airport_Code: "@Model.Search.ARR_Airport_Code",
            ARR_Airport_Name: "@Model.Search.ARR_Airport_Name",
            ARR_Airport_CityName: "@Model.Search.ARR_Airport_CityName",
            ARR_Airport_IsCity: "@Model.Search.ARR_Airport_IsCity",
            ReturnDate: "@Model.Search.ReturnDate",
            Adult: "@Model.Search.Adult",
            Child: "@Model.Search.Child",
            Infant: "@Model.Search.Infant",
            Total: "@Model.Search.Total",
            CabinClass: "@Model.Search.CabinClass",
            NoStop: "@Model.Search.NoStop",
        };

        GetAjax("@Url.Action("Calendar", "Home")", model, "true", "POST", function (data) {
            debugger;
            if (data != null) {
                var arr = [];
                if (data.result.departures != null) {
                    var startOfDepartures = new Date(parseInt(data.result.departures[0].date.replace('/Date(', '')));
                    var endOfDepartures = new Date(parseInt(data.result.departures[data.result.departures.length - 1].date.replace('/Date(', '')));
                    var startOfReturns = new Date(parseInt(data.result.returns[0].date.replace('/Date(', '')));
                    var endOfReturns = new Date(parseInt(data.result.returns[data.result.returns.length - 1].date.replace('/Date(', '')));

                    //var startOfWeek = moment(data.result.departures[0].date);
                    var depdatearr = model.DepartureDate.split("-");
                    var startOfWeek = moment(new Date(depdatearr[1].toString() + "-" + depdatearr[0].toString() + "-" + depdatearr[2].toString())).add(-3, "days");
                    var endOfWeek = moment(new Date(depdatearr[1].toString() + "-" + depdatearr[0].toString() + "-" + depdatearr[2].toString())).add(3, "days");

                    var days = [];
                    var day = startOfWeek;

                    for (var i = 0; i < data.result.departures.length; i++) {
                        arr.push(moment(data.result.departures[i].date).format("DD-MM-YYYY"));
                    }

                    while (moment(day).format("DD-MM-YYYY") <= moment(endOfWeek).format("DD-MM-YYYY")) {
                        if (arr.indexOf(moment(day).format("DD-MM-YYYY")) != -1) {

                            var dep = Enumerable.From(data.result.departures)
                                .Where(function (x) { return moment(x.date).format("DD-MM-YYYY") == moment(day).format("DD-MM-YYYY"); }
                                ).ToArray();

                            var html = "";
                            html += '<form action="@Url.Action("Result","Flight")" method="post">';
                            html += '<button class="item ">';

                            html += '<input name="IsOneWay" type="hidden" value="@Model.Search.IsOneWay">';
                            html += '<input name="DEP_Airport_Code" type="hidden" value="@Model.Search.DEP_Airport_Code">';
                            html += '<input name="DEP_Airport_Name" type="hidden" value="@Model.Search.DEP_Airport_Name">';
                            html += '<input name="DEP_Airport_CityName" type="hidden" value="@Model.Search.DEP_Airport_CityName">';
                            html += '<input name="DEP_Airport_IsCity" type="hidden" value="@Model.Search.DEP_Airport_IsCity">';
                            html += '<input name="DepartureDate" type="hidden" value="' + moment(dep[0].date).format("DD-MM-YYYY") + '">';
                            html += '<input name="ARR_Airport_Code" type="hidden" value="@Model.Search.ARR_Airport_Code">';
                            html += '<input name="ARR_Airport_Name" type="hidden" value="@Model.Search.ARR_Airport_Name">';
                            html += '<input name="ARR_Airport_CityName" type="hidden" value="@Model.Search.ARR_Airport_CityName">';
                            html += '<input name="ARR_Airport_IsCity" type="hidden" value="@Model.Search.ARR_Airport_IsCity">';
                            html += '<input name="ReturnDate" type="hidden" value="@Model.Search.ReturnDate">';
                            html += '<input name="Adult" type="hidden" value="@Model.Search.Adult">';
                            html += '<input name="Child" type="hidden" value="@Model.Search.Child">';
                            html += '<input name="Infant" type="hidden" value="@Model.Search.Infant">';
                            html += '<input name="Total" type="hidden" value="@Model.Search.Total">';
                            html += '<input name="CabinClass" type="hidden" value="@Model.Search.CabinClass">';
                            html += '<input name="NoStop" type="hidden" value="@Model.Search.NoStop">';

                            html += '<div class="bar js-bar" data-date="' + moment(dep[0].date) + '">';
                            html += '<div class="fill" style="height: ' + dep[0].price / 10 + '%">';
                            html += '<div class="price-info">';
                            html += '<div class="price-price">' + dep[0].price + '<span class="hidden-xs">&nbsp;' + dep[0].currency + '</span></div>';
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                            html += '<div class="date">';
                            html += '<div class="dow">' + moment(dep[0].date).format("dddd") + '</div>';
                            html += '<div class="day">' + moment(dep[0].date).format("Do MMMM") + '</div>';
                            html += '</div>';
                            html += '</button>';
                            html += '</form>';

                            $("#divGidisChartCollapse>.bars>.clearfix").append(html);
                        } else {
                            var random = (Math.floor(Math.random() * 60) + 70)
                            var html = "";
                            html += '<form action="@Url.Action("Result","Flight")" method="post">';

                            html += '<button class="item ">';
                            html += '<input name="IsOneWay" type="hidden" value="@Model.Search.IsOneWay">';
                            html += '<input name="DEP_Airport_Code" type="hidden" value="@Model.Search.DEP_Airport_Code">';
                            html += '<input name="DEP_Airport_Name" type="hidden" value="@Model.Search.DEP_Airport_Name">';
                            html += '<input name="DEP_Airport_CityName" type="hidden" value="@Model.Search.DEP_Airport_CityName">';
                            html += '<input name="DEP_Airport_IsCity" type="hidden" value="@Model.Search.DEP_Airport_IsCity">';
                            html += '<input name="DepartureDate" type="hidden" value="' + moment(day).format("DD-MM-YYYY") + '">';
                            html += '<input name="ARR_Airport_Code" type="hidden" value="@Model.Search.ARR_Airport_Code">';
                            html += '<input name="ARR_Airport_Name" type="hidden" value="@Model.Search.ARR_Airport_Name">';
                            html += '<input name="ARR_Airport_CityName" type="hidden" value="@Model.Search.ARR_Airport_CityName">';
                            html += '<input name="ARR_Airport_IsCity" type="hidden" value="@Model.Search.ARR_Airport_IsCity">';
                            html += '<input name="ReturnDate" type="hidden" value="@Model.Search.ReturnDate">';
                            html += '<input name="Adult" type="hidden" value="@Model.Search.Adult">';
                            html += '<input name="Child" type="hidden" value="@Model.Search.Child">';
                            html += '<input name="Infant" type="hidden" value="@Model.Search.Infant">';
                            html += '<input name="Total" type="hidden" value="@Model.Search.Total">';
                            html += '<input name="CabinClass" type="hidden" value="@Model.Search.CabinClass">';
                            html += '<input name="NoStop" type="hidden" value="@Model.Search.NoStop">';

                            html += '<div class="bar js-bar" data-date="">';
                            html += '<div class="fill" style="height:' + random / 10 + '%">';
                            html += '<div class="price-info">';
                            html += '<div class="price-price">' + random + '<span class="hidden-xs">&nbsp;</span></div>';
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                            html += '<div class="date">';
                            html += '<div class="dow">' + moment(day).format("dddd") + '</div>';
                            html += '<div class="day">' + moment(day).format("Do MMMM") + '</div>';
                            html += '</div>';

                            html += '</button>';
                            html += '</form>';
                            $("#divGidisChartCollapse>.bars>.clearfix").append(html);
                        }

                        day = moment(day).clone().add(1, 'd');
                    }
                }

                if (data.result.returns != null) {
                    debugger;
                    var startOfDepartures = new Date(parseInt(data.result.departures[0].date.replace('/Date(', '')));
                    var endOfDepartures = new Date(parseInt(data.result.departures[data.result.departures.length - 1].date.replace('/Date(', '')));
                    var startOfReturns = new Date(parseInt(data.result.returns[0].date.replace('/Date(', '')));
                    var endOfReturns = new Date(parseInt(data.result.returns[data.result.returns.length - 1].date.replace('/Date(', '')));
                    arr = [];
                    var retdatearr = model.ReturnDate.split("-");
                    var startOfWeek = moment(new Date(retdatearr[1].toString() + "-" + retdatearr[0].toString() + "-" + retdatearr[2].toString())).add(-3, "days");
                    var endOfWeek = moment(new Date(retdatearr[1].toString() + "-" + retdatearr[0].toString() + "-" + retdatearr[2].toString())).add(3, "days");

                    var days = [];
                    var day = moment(startOfWeek);
                    for (var i = 0; i < data.result.returns.length; i++) {
                        arr.push(moment(data.result.returns[i].date).format("DD-MM-YYYY"));
                    }

                    while (moment(day).format("DD-MM-YYYY") <= moment(endOfWeek).format("DD-MM-YYYY")) {
                        if (arr.indexOf(moment(day).format("DD-MM-YYYY")) != -1) {

                            var arrival = Enumerable.From(data.result.returns)
                                .Where(function (x) { return moment(x.date).format("DD-MM-YYYY") == moment(day).format("DD-MM-YYYY"); }
                                ).ToArray();
                            var html = "";
                            html += '<form action="@Url.Action("Result","Flight")" method="post">';
                            html += '<button class="item ">';
                            html += '<input name="IsOneWay" type="hidden" value="@Model.Search.IsOneWay">';
                            html += '<input name="DEP_Airport_Code" type="hidden" value="@Model.Search.DEP_Airport_Code">';
                            html += '<input name="DEP_Airport_Name" type="hidden" value="@Model.Search.DEP_Airport_Name">';
                            html += '<input name="DEP_Airport_CityName" type="hidden" value="@Model.Search.DEP_Airport_CityName">';
                            html += '<input name="DEP_Airport_IsCity" type="hidden" value="@Model.Search.DEP_Airport_IsCity">';
                            html += '<input name="DepartureDate" type="hidden" value="@Model.Search.DepartureDate">';
                            html += '<input name="ARR_Airport_Code" type="hidden" value="@Model.Search.ARR_Airport_Code">';
                            html += '<input name="ARR_Airport_Name" type="hidden" value="@Model.Search.ARR_Airport_Name">';
                            html += '<input name="ARR_Airport_CityName" type="hidden" value="@Model.Search.ARR_Airport_CityName">';
                            html += '<input name="ARR_Airport_IsCity" type="hidden" value="@Model.Search.ARR_Airport_IsCity">';
                            html += '<input name="ReturnDate" type="hidden" value="' + moment(arrival[0].date).format("DD-MM-YYYY") + '">';
                            html += '<input name="Adult" type="hidden" value="@Model.Search.Adult">';
                            html += '<input name="Child" type="hidden" value="@Model.Search.Child">';
                            html += '<input name="Infant" type="hidden" value="@Model.Search.Infant">';
                            html += '<input name="Total" type="hidden" value="@Model.Search.Total">';
                            html += '<input name="CabinClass" type="hidden" value="@Model.Search.CabinClass">';
                            html += '<input name="NoStop" type="hidden" value="@Model.Search.NoStop">';

                            html += '<div class="bar js-bar" data-date="' + moment(arrival[0].date) + '">';
                            html += '<div class="fill" style="height: ' + arrival[0].price / 10 + '%">';
                            html += '<div class="price-info">';
                            html += '<div class="price-price">' + arrival[0].price + '<span class="hidden-xs">&nbsp;' + arrival[0].currency + '</span></div>';
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                            html += '<div class="date">';
                            html += '<div class="dow">' + moment(arrival[0].date).format("dddd") + '</div>';
                            html += '<div class="day">' + moment(arrival[0].date).format("Do MMMM") + '</div>';
                            html += '</div>';
                            html += '</button>';
                            html += '</form>';

                            $("#divDonusChartCollapse>.bars>.clearfix").append(html);
                        } else {
                            var random = (Math.floor(Math.random() * 60) + 70);
                            var html = "";
                            html += '<form action="@Url.Action("Result","Flight")" method="post">';
                            html += '<button class="item ">';
                            html += '<input name="IsOneWay" type="hidden" value="@Model.Search.IsOneWay">';
                            html += '<input name="DEP_Airport_Code" type="hidden" value="@Model.Search.DEP_Airport_Code">';
                            html += '<input name="DEP_Airport_Name" type="hidden" value="@Model.Search.DEP_Airport_Name">';
                            html += '<input name="DEP_Airport_CityName" type="hidden" value="@Model.Search.DEP_Airport_CityName">';
                            html += '<input name="DEP_Airport_IsCity" type="hidden" value="@Model.Search.DEP_Airport_IsCity">';
                            html += '<input name="DepartureDate" type="hidden" value="@Model.Search.DepartureDate">';
                            html += '<input name="ARR_Airport_Code" type="hidden" value="@Model.Search.ARR_Airport_Code">';
                            html += '<input name="ARR_Airport_Name" type="hidden" value="@Model.Search.ARR_Airport_Name">';
                            html += '<input name="ARR_Airport_CityName" type="hidden" value="@Model.Search.ARR_Airport_CityName">';
                            html += '<input name="ARR_Airport_IsCity" type="hidden" value="@Model.Search.ARR_Airport_IsCity">';
                            html += '<input name="ReturnDate" type="hidden" value="' + moment(day).format("DD-MM-YYYY") + '">';
                            html += '<input name="Adult" type="hidden" value="@Model.Search.Adult">';
                            html += '<input name="Child" type="hidden" value="@Model.Search.Child">';
                            html += '<input name="Infant" type="hidden" value="@Model.Search.Infant">';
                            html += '<input name="Total" type="hidden" value="@Model.Search.Total">';
                            html += '<input name="CabinClass" type="hidden" value="@Model.Search.CabinClass">';
                            html += '<input name="NoStop" type="hidden" value="@Model.Search.NoStop">';

                            html += '<div class="bar js-bar" data-date="">';
                            html += '<div class="fill" style="height:' + random / 10 + '%">';
                            html += '<div class="price-info">';
                            html += '<div class="price-price">' + random + '<span class="hidden-xs">&nbsp;</span></div>';
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                            html += '<div class="date">';
                            html += '<div class="dow">' + moment(day).format("dddd") + '</div>';
                            html += '<div class="day">' + moment(day).format("Do MMMM") + '</div>';
                            html += '</div>';
                            html += '</button>';
                            html += '</form>';

                            $("#divDonusChartCollapse>.bars>.clearfix").append(html);
                        }

                        day = day.clone().add(1, 'd');
                    }

                }

            }

        });
    });
    function CalcPersonCount() {
        var adultCount = $('#txtAdultCount').val();
        var childCount = $('#txtChildCount').val();
        var infantCount = $('#txtInfantCount').val();
        $('#personCount').html(parseInt(adultCount) + parseInt(childCount) + parseInt(infantCount));
    }
    $("#btnChangePorts").click(function () {
        var depCity = $("#dvReturn").find('span[class="label-short"]').text();
        var depAirport = $("#dvReturn").find('span[class="label-airport"]').text();
        var depCode = $("#dvReturn").find('span[class="label-code"]').text();

        var arrCity = $("#dvDeparture").find('span[class="label-short"]').text();
        var arrAirport = $("#dvDeparture").find('span[class="label-airport"]').text();
        var arrCode = $("#dvDeparture").find('span[class="label-code"]').text();

        $("#dvDeparture").find('span[class="label-short"]').text(depCity);
        $("#dvDeparture").find('span[class="label-airport"]').text(depAirport);
        $("#dvDeparture").find('span[class="label-code"]').text(depCode);
        $('#DEP_Airport_Code').val(depCode);

        $("#dvReturn").find('span[class="label-short"]').text(arrCity);
        $("#dvReturn").find('span[class="label-airport"]').text(arrAirport);
        $("#dvReturn").find('span[class="label-code"]').text(arrCode);
        $('#ARR_Airport_Code').val(arrCode);

    });
    function SetAutocomplete() {
        $("#selectBoardingTerminal").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("Autocomplete", "WDT")",
                    type: "GET",
                    data: { q: request.term },
                    success: function (data) {

                        response($.map(data, function (el) {
                            return {
                                name: el.name,
                                code: el.code,
                                cityName: el.cityName,
                                label: el.cityName + ' - ' + el.name + ' - (' + el.code + ') - ' + el.countryName,
                                value: el.code,
                                city: el.city
                            };
                        }));
                    }
                });
            },
            appendTo: $("#dvDeparture").find(".dropdown-menu"),
            delay: 300,
            autoFocus: !0,
            minLength: 3,
            max: 7,
            classes: {
                "ui-autocomplete": "tt-menu"
            },
            select: function (t, e) {
                console.log(e.item);
                $("#DEP_Airport_Code").val(e.item.code);
                $("#DEP_Airport_IsCity").val(e.item.city);
                $("#dvDeparture").find(".label-short").html(e.item.cityName);
                $("#dvDeparture").find(".label-airport").html(e.item.name);
                $("#dvDeparture").find(".label-code").html(e.item.code);

                setTimeout(function () {
                    $('#dvReturn').find(".custom-input").trigger("click");
                    $("#selectLandingTerminal").focus();
                }, 100);
            },
            focus: function (t, e) {
                if (void 0 !== t.keyCode) {
                    var a = $(this).parents("form")[0].getAttribute("data-name");
                    $(this).hasClass("complete-origin") ? (window.main[a].origin = e.item.id, window.main[a].originText = e.item.label) : (window.main[a].destination = e.item.id, window.main[a].destinationText = e.item.label)
                }
            },
            create: function (t, e) {
                $(this).data("ui-autocomplete")._resizeMenu = function () {
                    this.menu.element.outerWidth($(this.element[0]).parents(".row")[0].offsetWidth)
                }, $(this).data("ui-autocomplete")._renderItem = function (t, e) {
                    var a = '<div class="item"><span class="avatar"><i class="icon-chevron-right"></i></span> <span class="airport">' + e.name + '<small>(' + e.code + ')</small>, </span> <span class="city">' + e.cityName + '</span> </div>';
                    return $("<li>").append(a).appendTo(t)
                }, $(this).autocomplete("option", "position", {
                    my: "right top",
                    at: "right bottom",
                    of: $(this).parents(".row")[0]
                })
            }
        });

        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        $("#selectLandingTerminal").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "@Url.Action("Autocomplete", "WDT")",
                    type: "GET",
                    data: { q: request.term },
                    success: function (data) {
                        response($.map(data, function (el) {
                            return {
                                name: el.name,
                                code: el.code,
                                cityName: el.cityName,
                                label: el.cityName + ' - ' + el.name + ' - (' + el.code + ') - ' + el.countryName,
                                value: el.code,
                                city: el.city
                            };
                        }));
                    }
                });
            },
            appendTo: $("#dvReturn").find(".dropdown-menu"),
            delay: 300,
            autoFocus: !0,
            minLength: 3,
            max: 7,
            classes: {
                "ui-autocomplete": "tt-menu"
            },
            select: function (t, e) {
                console.log(e.item);
                $("#ARR_Airport_Code").val(e.item.code);
                $("#ARR_Airport_IsCity").val(e.item.city);
                $("#dvReturn").find(".label-short").html(e.item.cityName);
                $("#dvReturn").find(".label-airport").html(e.item.name);
                $("#dvReturn").find(".label-code").html(e.item.code);
                $('#selectLandingTerminal').blur();
                setTimeout(function () {
                    $("#inpRangePicker").focus();
                    $('#selectLandingTerminal').blur();
                }, 100);
            },
            focus: function (t, e) {
                if (void 0 !== t.keyCode) {
                    var a = $(this).parents("form")[0].getAttribute("data-name");
                    $(this).hasClass("complete-origin") ? (window.main[a].origin = e.item.id, window.main[a].originText = e.item.label) : (window.main[a].destination = e.item.id, window.main[a].destinationText = e.item.label)
                }
            },
            create: function (t, e) {
                $(this).data("ui-autocomplete")._resizeMenu = function () {
                    this.menu.element.outerWidth($(this.element[0]).parents(".row")[0].offsetWidth)
                }, $(this).data("ui-autocomplete")._renderItem = function (t, e) {
                    var a = '<div class="item"><span class="avatar"><i class="icon-chevron-right"></i></span> <span class="airport">' + e.name + '<small>(' + e.code + ')</small>, </span> <span class="city">' + e.cityName + '</span> </div>';
                    return $("<li>").append(a).appendTo(t)
                }, $(this).autocomplete("option", "position", {
                    my: "right top",
                    at: "right bottom",
                    of: $(this).parents(".row")[0]
                })
            }
        });
    }

    function SetPicker(isSingle) {
        var today = new Date();
        $('#inpRangePicker').daterangepicker({
            locale: {
                format: 'DD.MM.YYYY',
                "applyLabel": "Tamam",
                "cancelLabel": "Kapat",
                "fromLabel": "From",
                "toLabel": "To",
                "customRangeLabel": "Custom",
                "weekLabel": "W",
                "daysOfWeek": [
                    "Pz",
                    "Pt",
                    "Sa",
                    "Ça",
                    "Pe",
                    "Cu",
                    "Ct"
                ],
                "monthNames": [
                    "Ocak",
                    "Şubat",
                    "Mart",
                    "Nisan",
                    "Mayıs",
                    "Haziran",
                    "Temmuz",
                    "Ağustos",
                    "Eylül",
                    "Ekim",
                    "Kasım",
                    "Aralık"
                ],
                "firstDay": 1
            },
            singleDatePicker: isSingle,
            autoApply: true,
            autoUpdateInput: true,
            changeMonth: false,
            showDropdowns: false,
            minDate: today,
            autoApply: false
        });

    }
    </script>

}